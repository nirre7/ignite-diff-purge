diff --git a/IgniteDiffApp/app.json b/IgniteDiffApp/app.json
index 3b6f6fd5..f28eb0f5 100644
--- a/IgniteDiffApp/app.json
+++ b/IgniteDiffApp/app.json
@@ -73,6 +73,6 @@
     }
   },
   "ignite": {
-    "version": "9.8.1"
+    "version": "9.8.2"
   }
 }
\ No newline at end of file
diff --git a/IgniteDiffApp/app/i18n/i18n.ts b/IgniteDiffApp/app/i18n/i18n.ts
index ee09968d..be45a5bd 100644
--- a/IgniteDiffApp/app/i18n/i18n.ts
+++ b/IgniteDiffApp/app/i18n/i18n.ts
@@ -1,5 +1,5 @@
 import * as Localization from "expo-localization"
-import i18n from "i18n-js"
+import { I18n } from "i18n-js"
 import { I18nManager } from "react-native"
 
 // if English isn't your default language, move Translations to the appropriate language file.
@@ -9,14 +9,19 @@ import ko from "./ko"
 import fr from "./fr"
 import jp from "./jp"
 
-i18n.fallbacks = true
+// Migration guide from i18n 3.x -> 4.x:
+// https://github.com/fnando/i18n-js/blob/main/MIGRATING_FROM_V3_TO_V4.md
+// https://github.com/fnando/i18n/discussions/24
 
 // to use regional locales use { "en-US": enUS } etc
-i18n.translations = { ar, en, "en-US": en, ko, fr, jp }
-
 const fallbackLocale = "en-US"
+export const i18n = new I18n(
+  { ar, en, "en-US": en, ko, fr, jp },
+  { locale: fallbackLocale, defaultLocale: fallbackLocale, enableFallback: true },
+)
+
 const systemLocale = Localization.getLocales()[0]
-const systemLocaleTag = systemLocale?.languageTag ?? "en-US"
+const systemLocaleTag = systemLocale?.languageTag ?? fallbackLocale
 
 if (Object.prototype.hasOwnProperty.call(i18n.translations, systemLocaleTag)) {
   // if specific locales like en-FI or en-US is available, set it
diff --git a/IgniteDiffApp/app/i18n/translate.ts b/IgniteDiffApp/app/i18n/translate.ts
index 084fdcdf..00c1c1e0 100644
--- a/IgniteDiffApp/app/i18n/translate.ts
+++ b/IgniteDiffApp/app/i18n/translate.ts
@@ -1,5 +1,5 @@
-import i18n from "i18n-js"
-import { TxKeyPath } from "./i18n"
+import { TranslateOptions } from "i18n-js"
+import { i18n, TxKeyPath } from "./i18n"
 
 /**
  * Translates text.
@@ -23,6 +23,6 @@ import { TxKeyPath } from "./i18n"
  * // => "Hello world!"
  * ```
  */
-export function translate(key: TxKeyPath, options?: i18n.TranslateOptions): string {
+export function translate(key: TxKeyPath, options?: TranslateOptions): string {
   return i18n.t(key, options)
 }
diff --git a/IgniteDiffApp/app/utils/formatDate.ts b/IgniteDiffApp/app/utils/formatDate.ts
index 5f87b893..1e2a89ee 100644
--- a/IgniteDiffApp/app/utils/formatDate.ts
+++ b/IgniteDiffApp/app/utils/formatDate.ts
@@ -1,5 +1,3 @@
-import I18n from "i18n-js"
-
 // Note the syntax of these imports from the date-fns library.
 // If you import with the syntax: import { format } from "date-fns" the ENTIRE library
 // will be included in your production bundle (even if you only use one function).
@@ -10,11 +8,12 @@ import parseISO from "date-fns/parseISO"
 import ar from "date-fns/locale/ar-SA"
 import ko from "date-fns/locale/ko"
 import en from "date-fns/locale/en-US"
+import { i18n } from "app/i18n"
 
 type Options = Parameters<typeof format>[2]
 
 const getLocale = (): Locale => {
-  const locale = I18n.currentLocale().split("-")[0]
+  const locale = i18n.locale.split("-")[0]
   return locale === "ar" ? ar : locale === "ko" ? ko : en
 }
 
diff --git a/IgniteDiffApp/package.json b/IgniteDiffApp/package.json
index f9ba4e38..6eb113d6 100644
--- a/IgniteDiffApp/package.json
+++ b/IgniteDiffApp/package.json
@@ -48,7 +48,7 @@
     "expo-localization": "~15.0.3",
     "expo-splash-screen": "~0.27.4",
     "expo-status-bar": "~1.12.1",
-    "i18n-js": "3.9.2",
+    "i18n-js": "^4.4.3",
     "mobx": "6.10.2",
     "mobx-react-lite": "4.0.5",
     "mobx-state-tree": "5.3.0",
diff --git a/IgniteDiffApp/test/setup.ts b/IgniteDiffApp/test/setup.ts
index 1c671011..ff75c97f 100644
--- a/IgniteDiffApp/test/setup.ts
+++ b/IgniteDiffApp/test/setup.ts
@@ -27,18 +27,21 @@ jest.mock("@react-native-async-storage/async-storage", () =>
   require("@react-native-async-storage/async-storage/jest/async-storage-mock"),
 )
 
-jest.mock("i18n-js", () => ({
-  currentLocale: () => "en",
-  t: (key: string, params: Record<string, string>) => {
-    return `${key} ${JSON.stringify(params)}`
-  },
-}))
-
 jest.mock("expo-localization", () => ({
   ...jest.requireActual("expo-localization"),
   getLocales: () => [{ languageTag: "en-US", textDirection: "ltr" }],
 }))
 
+jest.mock("../app/i18n/i18n.ts", () => ({
+  i18n: {
+    locale: "en",
+    t: (key: string, params: Record<string, string>) => {
+      return `${key} ${JSON.stringify(params)}`
+    },
+    numberToCurrency: jest.fn(),
+  },
+}))
+
 declare const tron // eslint-disable-line @typescript-eslint/no-unused-vars
 
 declare global {
diff --git a/IgniteDiffApp/yarn.lock b/IgniteDiffApp/yarn.lock
index ab37834a..71133c47 100644
--- a/IgniteDiffApp/yarn.lock
+++ b/IgniteDiffApp/yarn.lock
@@ -3268,6 +3268,11 @@ big-integer@1.6.x:
   resolved "https://registry.yarnpkg.com/big-integer/-/big-integer-1.6.52.tgz#60a887f3047614a8e1bffe5d7173490a97dc8c85"
   integrity sha512-QxD8cf2eVqJOOz63z6JIN9BzvVs/dlySa5HGSBH5xtR8dPteIRQnBxxKqkNTiT6jbDTF6jAfrd4oMcND9RGbQg==
 
+bignumber.js@*:
+  version "9.1.2"
+  resolved "https://registry.yarnpkg.com/bignumber.js/-/bignumber.js-9.1.2.tgz#b7c4242259c008903b13707983b5f4bbd31eda0c"
+  integrity sha512-2/mKyZH9K85bzOEfhXDBFZTGd1CTs+5IHpeFQo9luiBG7hghdC851Pj2WAhb6E3R6b9tZj/XKhbg4fum+Kepug==
+
 bl@^4.1.0:
   version "4.1.0"
   resolved "https://registry.yarnpkg.com/bl/-/bl-4.1.0.tgz#451535264182bec2fbbc83a62ab98cf11d9f7b3a"
@@ -5420,10 +5425,14 @@ hyphenate-style-name@^1.0.3:
   resolved "https://registry.yarnpkg.com/hyphenate-style-name/-/hyphenate-style-name-1.1.0.tgz#1797bf50369588b47b72ca6d5e65374607cf4436"
   integrity sha512-WDC/ui2VVRrz3jOVi+XtjqkDjiVjTtFaAGiW37k6b+ohyQ5wYDOGkvCZa8+H0nx3gyvv0+BST9xuOgIyGQ00gw==
 
-i18n-js@3.9.2:
-  version "3.9.2"
-  resolved "https://registry.yarnpkg.com/i18n-js/-/i18n-js-3.9.2.tgz#4a015dcfabd4c9fc73115fc2d02d2627e4c15ca5"
-  integrity sha512-+Gm8h5HL0emzKhRx2avMKX+nKiVPXeaOZm7Euf2/pbbFcLQoJ3zZYiUykAzoRasijCoWos2Kl1tslmScTgAQKw==
+i18n-js@^4.4.3:
+  version "4.5.0"
+  resolved "https://registry.yarnpkg.com/i18n-js/-/i18n-js-4.5.0.tgz#c2cc98df71746fecf2c8831f90eb9b6a5a4566c5"
+  integrity sha512-eiT3ZzK+k1VUR/oDz0Nne3dWU6DE+4P3FxtHXgHMZyzW1lKAHsjEYaOPZClU4QA9rI+uoeE71zq1QzLnZ6LDJQ==
+  dependencies:
+    bignumber.js "*"
+    lodash "*"
+    make-plural "*"
 
 iconv-lite@0.6.3:
   version "0.6.3"
@@ -6656,7 +6665,7 @@ lodash.throttle@^4.1.1:
   resolved "https://registry.yarnpkg.com/lodash.throttle/-/lodash.throttle-4.1.1.tgz#c23e91b710242ac70c37f1e1cda9274cc39bf2f4"
   integrity sha512-wIkUCfVKpVsWo3JSZlc+8MB5it+2AN5W8J7YVMST30UrvcQNZ1Okbj+rbVniijTWE6FGYy4XJq/rHkas8qJMLQ==
 
-lodash@^4.17.10, lodash@^4.17.13, lodash@^4.17.19, lodash@^4.17.21:
+lodash@*, lodash@^4.17.10, lodash@^4.17.13, lodash@^4.17.19, lodash@^4.17.21:
   version "4.17.21"
   resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.17.21.tgz#679591c564c3bffaae8454cf0b3df370c3d6911c"
   integrity sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==
@@ -6731,6 +6740,11 @@ make-error@^1.1.1, make-error@^1.3.6:
   resolved "https://registry.yarnpkg.com/make-error/-/make-error-1.3.6.tgz#2eb2e37ea9b67c4891f684a1394799af484cf7a2"
   integrity sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==
 
+make-plural@*:
+  version "7.4.0"
+  resolved "https://registry.yarnpkg.com/make-plural/-/make-plural-7.4.0.tgz#fa6990dd550dea4de6b20163f74e5ed83d8a8d6d"
+  integrity sha512-4/gC9KVNTV6pvYg2gFeQYTW3mWaoJt7WZE5vrp1KnQDgW92JtYZnzmZT81oj/dUTqAIu0ufI2x3dkgu3bB1tYg==
+
 makeerror@1.0.12:
   version "1.0.12"
   resolved "https://registry.yarnpkg.com/makeerror/-/makeerror-1.0.12.tgz#3e5dd2079a82e812e983cc6610c4a2cb0eaa801a"
