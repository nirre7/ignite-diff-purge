diff --git a/IgniteDiffApp/.maestro/Login.yaml b/IgniteDiffApp/.maestro/Login.yaml
deleted file mode 100644
index 4a0f0dd5..00000000
--- a/IgniteDiffApp/.maestro/Login.yaml
+++ /dev/null
@@ -1,19 +0,0 @@
-#flow: Login
-#intent:
-# Open up our app and use the default credentials to login
-# and navigate to the demo screen
-
-appId: com.ignitediffapp # the app id of the app we want to test
-# You can find the appId of an Ignite app in the `app.json` file
-# as the "package" under the "android" section and "bundleIdentifier" under the "ios" section
----
-- clearState # clears the state of our app (navigation and authentication)
-- launchApp # launches the app
-- assertVisible: "Log In"
-- tapOn:
-    text: "Tap to Log in!"
-- assertVisible: "Your app, almost ready for launch!"
-- tapOn:
-    text: "Let's go!"
-- assertVisible: "Components to jump start your project!"
-
diff --git a/IgniteDiffApp/.maestro/FavoritePodcast.yaml b/IgniteDiffApp/.maestro/flows/FavoritePodcast.yaml
similarity index 89%
rename from IgniteDiffApp/.maestro/FavoritePodcast.yaml
rename to IgniteDiffApp/.maestro/flows/FavoritePodcast.yaml
index 6b3231b6..7e79aa84 100644
--- a/IgniteDiffApp/.maestro/FavoritePodcast.yaml
+++ b/IgniteDiffApp/.maestro/flows/FavoritePodcast.yaml
@@ -1,11 +1,12 @@
 # flow: run the login flow and then navigate to the demo podcast list screen, favorite a podcast, and then switch the list to only be favorites.
 
-appId: com.ignitediffapp
+appId: ${MAESTRO_APP_ID}
 env:
   FAVORITES_TEXT: "Switch on to only show favorites"
-
+onFlowStart:
+  - runFlow: ../shared/_OnFlowStart.yaml
 ---
-- runFlow: Login.yaml
+- runFlow: ../shared/_Login.yaml
 - tapOn: "Podcast"
 - assertVisible: "React Native Radio episodes"
 - tapOn:
diff --git a/IgniteDiffApp/.maestro/flows/Login.yaml b/IgniteDiffApp/.maestro/flows/Login.yaml
new file mode 100644
index 00000000..f094ba1d
--- /dev/null
+++ b/IgniteDiffApp/.maestro/flows/Login.yaml
@@ -0,0 +1,13 @@
+#flow: Login
+#intent:
+# Open up our app and use the default credentials to login
+# and navigate to the demo screen
+
+appId: ${MAESTRO_APP_ID} # the app id of the app we want to test
+# You can find the appId of an Ignite app in the `app.json` file
+# as the "package" under the "android" section and "bundleIdentifier" under the "ios" section
+onFlowStart:
+  - runFlow: ../shared/_OnFlowStart.yaml
+---
+- runFlow: ../shared/_Login.yaml
+
diff --git a/IgniteDiffApp/.maestro/shared/_Login.yaml b/IgniteDiffApp/.maestro/shared/_Login.yaml
new file mode 100644
index 00000000..073eb589
--- /dev/null
+++ b/IgniteDiffApp/.maestro/shared/_Login.yaml
@@ -0,0 +1,12 @@
+#flow: Shared _Login
+#intent: shared login flow for any flow that needs to start with a log in.
+appId: ${MAESTRO_APP_ID} 
+---
+- assertVisible: "Log In"
+- tapOn:
+    text: "Tap to Log in!"
+- assertVisible: "Your app, almost ready for launch!"
+- tapOn:
+    text: "Let's go!"
+- assertVisible: "Components to jump start your project!"
+
diff --git a/IgniteDiffApp/.maestro/shared/_OnFlowStart.yaml b/IgniteDiffApp/.maestro/shared/_OnFlowStart.yaml
new file mode 100644
index 00000000..6c0218bb
--- /dev/null
+++ b/IgniteDiffApp/.maestro/shared/_OnFlowStart.yaml
@@ -0,0 +1,13 @@
+# flow: run the login flow and then navigate to the demo podcast list screen, favorite a podcast, and then switch the list to only be favorites.
+
+appId: ${MAESTRO_APP_ID}
+---
+- runFlow:
+    when:
+      true: ${IS_DEV == "true"}
+    file: './_OpenWithDevClient.yaml'
+
+- runFlow:
+    when:
+      true: ${IS_DEV == "false"}
+    file: './_OpenAppClearStateAndKeychain.yaml'
diff --git a/IgniteDiffApp/.maestro/shared/_OpenAppClearStateAndKeychain.yaml b/IgniteDiffApp/.maestro/shared/_OpenAppClearStateAndKeychain.yaml
new file mode 100644
index 00000000..c2f7ab68
--- /dev/null
+++ b/IgniteDiffApp/.maestro/shared/_OpenAppClearStateAndKeychain.yaml
@@ -0,0 +1,6 @@
+---
+appId: ${MAESTRO_APP_ID}
+---
+- launchApp:
+    clearState: true
+    clearKeychain: true
diff --git a/IgniteDiffApp/.maestro/shared/_OpenWithDevClient.yaml b/IgniteDiffApp/.maestro/shared/_OpenWithDevClient.yaml
new file mode 100644
index 00000000..bacb7863
--- /dev/null
+++ b/IgniteDiffApp/.maestro/shared/_OpenWithDevClient.yaml
@@ -0,0 +1,28 @@
+# Common subflow for opening the app with a clear state, clear keychain, and getting past the Expo Dev Client prompts.
+# Use this for local development flows.
+---
+appId: ${MAESTRO_APP_ID}
+---
+- runFlow:
+    file: "./_OpenAppClearStateAndKeychain.yaml"
+
+# Wait for animation subflow
+- waitForAnimationToEnd
+
+# Connect to development server subflow
+- runFlow:
+    when:
+      platform: Android
+    commands:
+      - tapOn: ".*8081.*"
+- runFlow:
+    when:
+      platform: iOS
+    commands:
+      - tapOn: "http://localhost:8081"
+
+- waitForAnimationToEnd
+- extendedWaitUntil:
+    visible: "Continue"
+- swipe:
+    direction: DOWN
diff --git a/IgniteDiffApp/app.json b/IgniteDiffApp/app.json
index 890cda7c..0a69f7cf 100644
--- a/IgniteDiffApp/app.json
+++ b/IgniteDiffApp/app.json
@@ -53,6 +53,6 @@
     }
   },
   "ignite": {
-    "version": "10.2.0"
+    "version": "10.4.0"
   }
 }
\ No newline at end of file
diff --git a/IgniteDiffApp/app/components/Header.tsx b/IgniteDiffApp/app/components/Header.tsx
index a81ede72..e667dd6f 100644
--- a/IgniteDiffApp/app/components/Header.tsx
+++ b/IgniteDiffApp/app/components/Header.tsx
@@ -10,7 +10,7 @@ import {
 import { isRTL, translate } from "@/i18n"
 import { $styles } from "../theme"
 import { ExtendedEdge, useSafeAreaInsetsStyle } from "../utils/useSafeAreaInsetsStyle"
-import { Icon, IconTypes } from "./Icon"
+import { IconTypes, PressableIcon } from "./Icon"
 import { Text, TextProps } from "./Text"
 import { useAppTheme } from "@/utils/useAppTheme"
 import type { ThemedStyle } from "@/theme"
@@ -255,7 +255,7 @@ function HeaderAction(props: HeaderActionProps) {
 
   if (icon) {
     return (
-      <Icon
+      <PressableIcon
         size={24}
         icon={icon}
         color={iconColor}
diff --git a/IgniteDiffApp/app/components/Icon.tsx b/IgniteDiffApp/app/components/Icon.tsx
index e5324a3a..e562ebd6 100644
--- a/IgniteDiffApp/app/components/Icon.tsx
+++ b/IgniteDiffApp/app/components/Icon.tsx
@@ -1,4 +1,3 @@
-import { ComponentType } from "react"
 import {
   Image,
   ImageStyle,
@@ -13,7 +12,7 @@ import { useAppTheme } from "@/utils/useAppTheme"
 
 export type IconTypes = keyof typeof iconRegistry
 
-interface IconProps extends TouchableOpacityProps {
+type BaseIconProps = {
   /**
    * The name of the icon
    */
@@ -38,16 +37,47 @@ interface IconProps extends TouchableOpacityProps {
    * Style overrides for the icon container
    */
   containerStyle?: StyleProp<ViewStyle>
+}
 
-  /**
-   * An optional function to be called when the icon is pressed
-   */
-  onPress?: TouchableOpacityProps["onPress"]
+type PressableIconProps = Omit<TouchableOpacityProps, "style"> & BaseIconProps
+type IconProps = Omit<ViewProps, "style"> & BaseIconProps
+
+/**
+ * A component to render a registered icon.
+ * It is wrapped in a <TouchableOpacity />
+ * @see [Documentation and Examples]{@link https://docs.infinite.red/ignite-cli/boilerplate/app/components/Icon/}
+ * @param {PressableIconProps} props - The props for the `PressableIcon` component.
+ * @returns {JSX.Element} The rendered `PressableIcon` component.
+ */
+export function PressableIcon(props: PressableIconProps) {
+  const {
+    icon,
+    color,
+    size,
+    style: $imageStyleOverride,
+    containerStyle: $containerStyleOverride,
+    ...pressableProps
+  } = props
+
+  const { theme } = useAppTheme()
+
+  const $imageStyle: StyleProp<ImageStyle> = [
+    $imageStyleBase,
+    { tintColor: color ?? theme.colors.text },
+    size !== undefined && { width: size, height: size },
+    $imageStyleOverride,
+  ]
+
+  return (
+    <TouchableOpacity {...pressableProps} style={$containerStyleOverride}>
+      <Image style={$imageStyle} source={iconRegistry[icon]} />
+    </TouchableOpacity>
+  )
 }
 
 /**
  * A component to render a registered icon.
- * It is wrapped in a <TouchableOpacity /> if `onPress` is provided, otherwise a <View />.
+ * It is wrapped in a <View />, use `PressableIcon` if you want to react to input
  * @see [Documentation and Examples]{@link https://docs.infinite.red/ignite-cli/boilerplate/app/components/Icon/}
  * @param {IconProps} props - The props for the `Icon` component.
  * @returns {JSX.Element} The rendered `Icon` component.
@@ -59,14 +89,9 @@ export function Icon(props: IconProps) {
     size,
     style: $imageStyleOverride,
     containerStyle: $containerStyleOverride,
-    ...WrapperProps
+    ...viewProps
   } = props
 
-  const isPressable = !!WrapperProps.onPress
-  const Wrapper = (WrapperProps?.onPress ? TouchableOpacity : View) as ComponentType<
-    TouchableOpacityProps | ViewProps
-  >
-
   const { theme } = useAppTheme()
 
   const $imageStyle: StyleProp<ImageStyle> = [
@@ -77,13 +102,9 @@ export function Icon(props: IconProps) {
   ]
 
   return (
-    <Wrapper
-      accessibilityRole={isPressable ? "imagebutton" : undefined}
-      {...WrapperProps}
-      style={$containerStyleOverride}
-    >
+    <View {...viewProps} style={$containerStyleOverride}>
       <Image style={$imageStyle} source={iconRegistry[icon]} />
-    </Wrapper>
+    </View>
   )
 }
 
diff --git a/IgniteDiffApp/app/components/ListItem.tsx b/IgniteDiffApp/app/components/ListItem.tsx
index 5a21a636..17803a20 100644
--- a/IgniteDiffApp/app/components/ListItem.tsx
+++ b/IgniteDiffApp/app/components/ListItem.tsx
@@ -1,4 +1,4 @@
-import { forwardRef, ReactElement } from "react"
+import { forwardRef, ReactElement, ComponentType } from "react"
 import {
   StyleProp,
   TextStyle,
@@ -130,6 +130,12 @@ export const ListItem = forwardRef<View, ListItemProps>(function ListItem(
   } = props
   const { themed } = useAppTheme()
 
+  const isTouchable =
+    TouchableOpacityProps.onPress !== undefined ||
+    TouchableOpacityProps.onPressIn !== undefined ||
+    TouchableOpacityProps.onPressOut !== undefined ||
+    TouchableOpacityProps.onLongPress !== undefined
+
   const $textStyles = [$textStyle, $textStyleOverride, TextProps?.style]
 
   const $containerStyles = [
@@ -140,9 +146,11 @@ export const ListItem = forwardRef<View, ListItemProps>(function ListItem(
 
   const $touchableStyles = [$styles.row, $touchableStyle, { minHeight: height }, style]
 
+  const Wrapper: ComponentType<TouchableOpacityProps> = isTouchable ? TouchableOpacity : View
+
   return (
     <View ref={ref} style={themed($containerStyles)}>
-      <TouchableOpacity {...TouchableOpacityProps} style={$touchableStyles}>
+      <Wrapper {...TouchableOpacityProps} style={$touchableStyles}>
         <ListItemAction
           side="left"
           size={height}
@@ -162,7 +170,7 @@ export const ListItem = forwardRef<View, ListItemProps>(function ListItem(
           iconColor={rightIconColor}
           Component={RightComponent}
         />
-      </TouchableOpacity>
+      </Wrapper>
     </View>
   )
 })
diff --git a/IgniteDiffApp/app/config/config.prod.ts b/IgniteDiffApp/app/config/config.prod.ts
index 3acfe0a9..852e99ff 100644
--- a/IgniteDiffApp/app/config/config.prod.ts
+++ b/IgniteDiffApp/app/config/config.prod.ts
@@ -6,5 +6,5 @@
  * https://reactnative.dev/docs/security#storing-sensitive-info
  */
 export default {
-  API_URL: "CHANGEME",
+  API_URL: "https://api.rss2json.com/v1/",
 }
diff --git a/IgniteDiffApp/app/screens/LoginScreen.tsx b/IgniteDiffApp/app/screens/LoginScreen.tsx
index 0f4ba4bf..cf256f6d 100644
--- a/IgniteDiffApp/app/screens/LoginScreen.tsx
+++ b/IgniteDiffApp/app/screens/LoginScreen.tsx
@@ -1,7 +1,14 @@
 import { observer } from "mobx-react-lite"
 import { ComponentType, FC, useEffect, useMemo, useRef, useState } from "react"
 import { TextInput, TextStyle, ViewStyle } from "react-native"
-import { Button, Icon, Screen, Text, TextField, TextFieldAccessoryProps } from "../components"
+import {
+  Button,
+  PressableIcon,
+  Screen,
+  Text,
+  TextField,
+  TextFieldAccessoryProps,
+} from "../components"
 import { useStores } from "../models"
 import { AppStackScreenProps } from "../navigators"
 import type { ThemedStyle } from "@/theme"
@@ -60,7 +67,7 @@ export const LoginScreen: FC<LoginScreenProps> = observer(function LoginScreen(_
     () =>
       function PasswordRightAccessory(props: TextFieldAccessoryProps) {
         return (
-          <Icon
+          <PressableIcon
             icon={isAuthPasswordHidden ? "view" : "hidden"}
             color={colors.palette.neutral800}
             containerStyle={props.style}
diff --git a/IgniteDiffApp/bun.lock b/IgniteDiffApp/bun.lock
index 4ca3178d..525e5393 100644
--- a/IgniteDiffApp/bun.lock
+++ b/IgniteDiffApp/bun.lock
@@ -12,7 +12,7 @@
         "@shopify/flash-list": "1.7.3",
         "apisauce": "3.0.1",
         "date-fns": "^4.1.0",
-        "expo": "~52.0.7",
+        "expo": "^52.0.44",
         "expo-application": "~6.0.1",
         "expo-build-properties": "~0.13.1",
         "expo-dev-client": "~5.0.1",
@@ -1802,7 +1802,7 @@
 
     "picocolors": ["picocolors@1.1.1", "", {}, "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA=="],
 
-    "picomatch": ["picomatch@2.3.1", "", {}, "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA=="],
+    "picomatch": ["picomatch@3.0.1", "", {}, "sha512-I3EurrIQMlRc9IaAZnqRR044Phh2DXY+55o7uJ0V+hYZAcQYSuFWsc9q5PvyDHUSCe1Qxn/iBz+78s86zWnGag=="],
 
     "pify": ["pify@4.0.1", "", {}, "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g=="],
 
@@ -2340,12 +2340,6 @@
 
     "@cspotcode/source-map-support/@jridgewell/trace-mapping": ["@jridgewell/trace-mapping@0.3.9", "", { "dependencies": { "@jridgewell/resolve-uri": "^3.0.3", "@jridgewell/sourcemap-codec": "^1.4.10" } }, "sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ=="],
 
-    "@emnapi/core/tslib": ["tslib@2.6.3", "", {}, "sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ=="],
-
-    "@emnapi/runtime/tslib": ["tslib@2.6.3", "", {}, "sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ=="],
-
-    "@emnapi/wasi-threads/tslib": ["tslib@2.6.3", "", {}, "sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ=="],
-
     "@expo/cli/arg": ["arg@5.0.2", "", {}, "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg=="],
 
     "@expo/cli/form-data": ["form-data@3.0.4", "", { "dependencies": { "asynckit": "^0.4.0", "combined-stream": "^1.0.8", "es-set-tostringtag": "^2.1.0", "hasown": "^2.0.2", "mime-types": "^2.1.35" } }, "sha512-f0cRzm6dkyVYV3nPoooP8XlccPQukegwhAnpoLcXy+X+A8KfpGOoXwDr9FLZd3wzgLaBGQBE3lY93Zm/i1JvIQ=="],
@@ -2354,8 +2348,6 @@
 
     "@expo/cli/glob": ["glob@10.4.5", "", { "dependencies": { "foreground-child": "^3.1.0", "jackspeak": "^3.1.2", "minimatch": "^9.0.4", "minipass": "^7.1.2", "package-json-from-dist": "^1.0.0", "path-scurry": "^1.11.1" }, "bin": { "glob": "dist/esm/bin.mjs" } }, "sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg=="],
 
-    "@expo/cli/picomatch": ["picomatch@3.0.1", "", {}, "sha512-I3EurrIQMlRc9IaAZnqRR044Phh2DXY+55o7uJ0V+hYZAcQYSuFWsc9q5PvyDHUSCe1Qxn/iBz+78s86zWnGag=="],
-
     "@expo/cli/resolve": ["resolve@1.22.10", "", { "dependencies": { "is-core-module": "^2.16.0", "path-parse": "^1.0.7", "supports-preserve-symlinks-flag": "^1.0.0" }, "bin": { "resolve": "bin/resolve" } }, "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w=="],
 
     "@expo/cli/semver": ["semver@7.7.2", "", { "bin": { "semver": "bin/semver.js" } }, "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA=="],
@@ -2424,8 +2416,6 @@
 
     "@react-navigation/core/react-is": ["react-is@19.1.1", "", {}, "sha512-tr41fA15Vn8p4X9ntI+yCyeGSf1TlYaY5vlTZfQmeLBrFo3psOPX6HhTDnFNL9uj3EhP0KAQ80cugCl4b4BERA=="],
 
-    "@tybys/wasm-util/tslib": ["tslib@2.6.3", "", {}, "sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ=="],
-
     "@typescript-eslint/eslint-plugin/ignore": ["ignore@7.0.5", "", {}, "sha512-Hs59xBNfUIunMFgWAbGX5cq6893IbWg4KnrjbYwX3tx0ztorVgTDA6B2sxf8ejHJ4wz8BqGUMYlnzNBer5NvGg=="],
 
     "@typescript-eslint/typescript-estree/minimatch": ["minimatch@9.0.5", "", { "dependencies": { "brace-expansion": "^2.0.1" } }, "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow=="],
@@ -2440,7 +2430,7 @@
 
     "ansi-escapes/type-fest": ["type-fest@0.21.3", "", {}, "sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w=="],
 
-    "ast-types/tslib": ["tslib@2.6.3", "", {}, "sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ=="],
+    "anymatch/picomatch": ["picomatch@2.3.1", "", {}, "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA=="],
 
     "better-opn/open": ["open@8.4.2", "", { "dependencies": { "define-lazy-prop": "^2.0.0", "is-docker": "^2.1.1", "is-wsl": "^2.2.0" } }, "sha512-7x81NCL719oNbsq/3mh+hVrAWmFuEYUqrq/Iw3kUzH8ReypT9QQ0BLoJS7/G9k6N81XjW4qHWtjWwe/9eLy1EQ=="],
 
@@ -2504,8 +2494,6 @@
 
     "fbjs/promise": ["promise@7.3.1", "", { "dependencies": { "asap": "~2.0.3" } }, "sha512-nolQXZ/4L+bP/UGlkfaIujX9BKxGwmQ9OT4mOt5yvy8iK1h3wqTEJCijzGANTCCl9nWjY41juyAn2K3Q1hLLTg=="],
 
-    "fdir/picomatch": ["picomatch@3.0.1", "", {}, "sha512-I3EurrIQMlRc9IaAZnqRR044Phh2DXY+55o7uJ0V+hYZAcQYSuFWsc9q5PvyDHUSCe1Qxn/iBz+78s86zWnGag=="],
-
     "finalhandler/debug": ["debug@2.6.9", "", { "dependencies": { "ms": "2.0.0" } }, "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA=="],
 
     "finalhandler/encodeurl": ["encodeurl@1.0.2", "", {}, "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w=="],
@@ -2542,6 +2530,8 @@
 
     "jest-snapshot/semver": ["semver@7.7.2", "", { "bin": { "semver": "bin/semver.js" } }, "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA=="],
 
+    "jest-util/picomatch": ["picomatch@2.3.1", "", {}, "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA=="],
+
     "jest-validate/camelcase": ["camelcase@6.3.0", "", {}, "sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA=="],
 
     "jest-watch-select-projects/chalk": ["chalk@3.0.0", "", { "dependencies": { "ansi-styles": "^4.1.0", "supports-color": "^7.1.0" } }, "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg=="],
@@ -2586,6 +2576,8 @@
 
     "metro-symbolicate/source-map": ["source-map@0.5.7", "", {}, "sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ=="],
 
+    "micromatch/picomatch": ["picomatch@2.3.1", "", {}, "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA=="],
+
     "minipass-flush/minipass": ["minipass@3.3.6", "", { "dependencies": { "yallist": "^4.0.0" } }, "sha512-DxiNidxSEK+tHG6zOIklvNOwm3hvCrbUrdtzY74U6HKTJxvIDfOUL5W5P2Ghd3DTkhhKPYGqeNUIh5qcM4YBfw=="],
 
     "minipass-pipeline/minipass": ["minipass@3.3.6", "", { "dependencies": { "yallist": "^4.0.0" } }, "sha512-DxiNidxSEK+tHG6zOIklvNOwm3hvCrbUrdtzY74U6HKTJxvIDfOUL5W5P2Ghd3DTkhhKPYGqeNUIh5qcM4YBfw=="],
@@ -2632,8 +2624,6 @@
 
     "reactotron-react-js/stacktrace-js": ["stacktrace-js@2.0.1", "", { "dependencies": { "error-stack-parser": "^2.0.4", "stack-generator": "^2.0.4", "stacktrace-gps": "^3.0.3" } }, "sha512-13oDNgBSeWtdGa4/2BycNyKqe+VktCoJ8VLx4pDoJkwGGJVtiHdfMOAj3aW9xTi8oR2v34z9IcvfCvT6XNdNAw=="],
 
-    "recast/tslib": ["tslib@2.6.3", "", {}, "sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ=="],
-
     "regjsparser/jsesc": ["jsesc@3.0.2", "", { "bin": { "jsesc": "bin/jsesc" } }, "sha512-xKqzzWXDttJuOcawBt4KnKHHIf5oQ/Cxax+0PWFG+DFDgHNAdi+TXECADI+RYiFUMmx8792xsMbbgXj4CwnP4g=="],
 
     "requireg/resolve": ["resolve@1.7.1", "", { "dependencies": { "path-parse": "^1.0.5" } }, "sha512-c7rwLofp8g1U+h1KNyHL/jicrKg1Ek4q+Lr33AL65uZTinUZHe30D5HlyN5V9NW0JX1D5dXQ4jqW5l7Sy/kGfw=="],
diff --git a/IgniteDiffApp/package.json b/IgniteDiffApp/package.json
index c63d16cb..120c7152 100644
--- a/IgniteDiffApp/package.json
+++ b/IgniteDiffApp/package.json
@@ -10,14 +10,17 @@
     "patch": "patch-package",
     "test": "jest",
     "test:watch": "jest --watch",
-    "test:maestro": "maestro test .maestro/FavoritePodcast.yaml",
+    "test:maestro": "maestro test -e MAESTRO_APP_ID=com.ignitediffapp -e IS_DEV=true .maestro/flows",
+    "test:maestro:ci": "maestro test -e MAESTRO_APP_ID=com.ignitediffapp -e IS_DEV=false .maestro/flows",
     "adb": "adb reverse tcp:9090 tcp:9090 && adb reverse tcp:3000 tcp:3000 && adb reverse tcp:9001 tcp:9001 && adb reverse tcp:8081 tcp:8081",
     "postinstall": "patch-package",
     "build:ios:sim": "eas build --profile development --platform ios --local",
     "build:ios:dev": "eas build --profile development:device --platform ios --local",
+    "build:ios:preview": "eas build --profile preview --platform ios --local",
     "build:ios:prod": "eas build --profile production --platform ios --local",
     "build:android:sim": "eas build --profile development --platform android --local",
     "build:android:dev": "eas build --profile development:device --platform android --local",
+    "build:android:preview": "eas build --profile preview --platform android --local",
     "build:android:prod": "eas build --profile production --platform android --local",
     "start": "expo start --dev-client",
     "android": "expo run:android",
@@ -36,7 +39,7 @@
     "@shopify/flash-list": "1.7.3",
     "apisauce": "3.0.1",
     "date-fns": "^4.1.0",
-    "expo": "~52.0.7",
+    "expo": "^52.0.44",
     "expo-application": "~6.0.1",
     "expo-build-properties": "~0.13.1",
     "expo-dev-client": "~5.0.1",
