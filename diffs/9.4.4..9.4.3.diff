diff --git a/IgniteDiffApp/app.json b/IgniteDiffApp/app.json
index b430c30..c989e67 100644
--- a/IgniteDiffApp/app.json
+++ b/IgniteDiffApp/app.json
@@ -72,6 +72,6 @@
     }
   },
   "ignite": {
-    "version": "9.4.4"
+    "version": "9.4.3"
   }
 }
\ No newline at end of file
diff --git a/IgniteDiffApp/app/utils/useSafeAreaInsetsStyle.ts b/IgniteDiffApp/app/utils/useSafeAreaInsetsStyle.ts
index 625c43c..6d11b31 100644
--- a/IgniteDiffApp/app/utils/useSafeAreaInsetsStyle.ts
+++ b/IgniteDiffApp/app/utils/useSafeAreaInsetsStyle.ts
@@ -1,3 +1,4 @@
+import { FlexStyle } from "react-native"
 import { Edge, useSafeAreaInsets } from "react-native-safe-area-context"
 
 export type ExtendedEdge = Edge | "start" | "end"
@@ -16,29 +17,29 @@ const edgeInsetMap: Record<string, Edge> = {
   end: "right",
 }
 
-export type SafeAreaInsetsStyle<
-  Property extends "padding" | "margin" = "padding",
-  Edges extends Array<ExtendedEdge> = Array<ExtendedEdge>,
-> = {
-  [K in Edges[number] as `${Property}${Capitalize<K>}`]: number
-}
-
 /**
  * A hook that can be used to create a safe-area-aware style object that can be passed directly to a View.
  *
  * - [Documentation and Examples](https://github.com/infinitered/ignite/blob/master/docs/boilerplate/utility/useSafeAreaInsetsStyle.md)
  */
-export function useSafeAreaInsetsStyle<
-  Property extends "padding" | "margin" = "padding",
-  Edges extends Array<ExtendedEdge> = [],
->(
-  safeAreaEdges: Edges = [] as unknown as Edges,
-  property: Property = "padding" as Property,
-): SafeAreaInsetsStyle<Property, Edges> {
+export function useSafeAreaInsetsStyle(
+  safeAreaEdges: ExtendedEdge[] = [],
+  property: "padding" | "margin" = "padding",
+): Pick<
+  FlexStyle,
+  | "marginBottom"
+  | "marginEnd"
+  | "marginStart"
+  | "marginTop"
+  | "paddingBottom"
+  | "paddingEnd"
+  | "paddingStart"
+  | "paddingTop"
+> {
   const insets = useSafeAreaInsets()
 
   return safeAreaEdges.reduce((acc, e) => {
     const value = edgeInsetMap[e] ?? e
     return { ...acc, [`${property}${propertySuffixMap[e]}`]: insets[value] }
-  }, {}) as SafeAreaInsetsStyle<Property, Edges>
+  }, {})
 }
