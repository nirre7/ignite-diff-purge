diff --git a/IgniteDiffApp/.gitignore b/IgniteDiffApp/.gitignore
index 7b101a9..a5c60cc 100644
--- a/IgniteDiffApp/.gitignore
+++ b/IgniteDiffApp/.gitignore
@@ -59,9 +59,6 @@ buck-out/
 # Bundle artifact
 *.jsbundle
 
-# CocoaPods
-/ios/Pods/
-
 # Ignite-specific items below
 # You can safely replace everything above this comment with whatever is
 # in the default .gitignore generated by React-Native CLI
@@ -72,11 +69,10 @@ buck-out/
 # Expo
 .expo/*
 bin/Exponent.app
+/android
+/ios
 
-# If using Expo Go/Prebuild, uncomment these:
-# android
-# ios
-
+## Secrets
 npm-debug.*
 *.jks
 *.p8
diff --git a/IgniteDiffApp/app.json b/IgniteDiffApp/app.json
index c47bf2d..082ad8d 100644
--- a/IgniteDiffApp/app.json
+++ b/IgniteDiffApp/app.json
@@ -72,6 +72,6 @@
     }
   },
   "ignite": {
-    "version": "9.0.2"
+    "version": "9.3.1"
   }
 }
\ No newline at end of file
diff --git a/IgniteDiffApp/app/components/AutoImage.tsx b/IgniteDiffApp/app/components/AutoImage.tsx
index 9f36b8f..bf2f7c8 100644
--- a/IgniteDiffApp/app/components/AutoImage.tsx
+++ b/IgniteDiffApp/app/components/AutoImage.tsx
@@ -54,7 +54,7 @@ export function useAutoImage(
 /**
  * An Image component that automatically sizes a remote or data-uri image.
  *
- * - [Documentation and Examples](https://github.com/infinitered/ignite/blob/master/docs/Components-AutoImage.md)
+ * - [Documentation and Examples](https://docs.infinite.red/ignite-cli/boilerplate/components/AutoImage/)
  */
 export function AutoImage(props: AutoImageProps) {
   const { maxWidth, maxHeight, ...ImageProps } = props
diff --git a/IgniteDiffApp/app/components/Button.tsx b/IgniteDiffApp/app/components/Button.tsx
index 38aa03c..6e43c54 100644
--- a/IgniteDiffApp/app/components/Button.tsx
+++ b/IgniteDiffApp/app/components/Button.tsx
@@ -15,6 +15,7 @@ type Presets = keyof typeof $viewPresets
 export interface ButtonAccessoryProps {
   style: StyleProp<any>
   pressableState: PressableStateCallbackType
+  disabled?: boolean
 }
 
 export interface ButtonProps extends PressableProps {
@@ -47,6 +48,10 @@ export interface ButtonProps extends PressableProps {
    * An optional style override for the button text when in the "pressed" state.
    */
   pressedTextStyle?: StyleProp<TextStyle>
+  /**
+   * An optional style override for the button text when in the "disabled" state.
+   */
+  disabledTextStyle?: StyleProp<TextStyle>
   /**
    * One of the different types of button presets.
    */
@@ -65,6 +70,15 @@ export interface ButtonProps extends PressableProps {
    * Children components.
    */
   children?: React.ReactNode
+  /**
+   * disabled prop, accessed directly for declarative styling reasons.
+   * https://reactnative.dev/docs/pressable#disabled
+   */
+  disabled?: boolean
+  /**
+   * An optional style override for the disabled state
+   */
+  disabledStyle?: StyleProp<ViewStyle>
 }
 
 /**
@@ -82,9 +96,12 @@ export function Button(props: ButtonProps) {
     pressedStyle: $pressedViewStyleOverride,
     textStyle: $textStyleOverride,
     pressedTextStyle: $pressedTextStyleOverride,
+    disabledTextStyle: $disabledTextStyleOverride,
     children,
     RightAccessory,
     LeftAccessory,
+    disabled,
+    disabledStyle: $disabledViewStyleOverride,
     ...rest
   } = props
 
@@ -94,6 +111,7 @@ export function Button(props: ButtonProps) {
       $viewPresets[preset],
       $viewStyleOverride,
       !!pressed && [$pressedViewPresets[preset], $pressedViewStyleOverride],
+      !!disabled && $disabledViewStyleOverride,
     ]
   }
   function $textStyle({ pressed }: PressableStateCallbackType) {
@@ -101,21 +119,34 @@ export function Button(props: ButtonProps) {
       $textPresets[preset],
       $textStyleOverride,
       !!pressed && [$pressedTextPresets[preset], $pressedTextStyleOverride],
+      !!disabled && $disabledTextStyleOverride,
     ]
   }
 
   return (
-    <Pressable style={$viewStyle} accessibilityRole="button" {...rest}>
+    <Pressable
+      style={$viewStyle}
+      accessibilityRole="button"
+      accessibilityState={{ disabled: !!disabled }}
+      {...rest}
+      disabled={disabled}
+    >
       {(state) => (
         <>
-          {!!LeftAccessory && <LeftAccessory style={$leftAccessoryStyle} pressableState={state} />}
+          {!!LeftAccessory && (
+            <LeftAccessory style={$leftAccessoryStyle} pressableState={state} disabled={disabled} />
+          )}
 
           <Text tx={tx} text={text} txOptions={txOptions} style={$textStyle(state)}>
             {children}
           </Text>
 
           {!!RightAccessory && (
-            <RightAccessory style={$rightAccessoryStyle} pressableState={state} />
+            <RightAccessory
+              style={$rightAccessoryStyle}
+              pressableState={state}
+              disabled={disabled}
+            />
           )}
         </>
       )}
diff --git a/IgniteDiffApp/app/components/Screen.tsx b/IgniteDiffApp/app/components/Screen.tsx
index 32ce840..8c1f22a 100644
--- a/IgniteDiffApp/app/components/Screen.tsx
+++ b/IgniteDiffApp/app/components/Screen.tsx
@@ -204,7 +204,7 @@ export function Screen(props: ScreenProps) {
       <StatusBar style={statusBarStyle} {...StatusBarProps} />
 
       <KeyboardAvoidingView
-        behavior={isIos ? "padding" : undefined}
+        behavior={isIos ? "padding" : "height"}
         keyboardVerticalOffset={keyboardOffset}
         {...KeyboardAvoidingViewProps}
         style={[$keyboardAvoidingViewStyle, KeyboardAvoidingViewProps?.style]}
diff --git a/IgniteDiffApp/app/devtools/ReactotronConfig.ts b/IgniteDiffApp/app/devtools/ReactotronConfig.ts
index 09a99ee..17efb15 100644
--- a/IgniteDiffApp/app/devtools/ReactotronConfig.ts
+++ b/IgniteDiffApp/app/devtools/ReactotronConfig.ts
@@ -16,7 +16,6 @@ import { Reactotron } from "./ReactotronClient"
 
 const reactotron = Reactotron.configure({
   name: require("../../package.json").name,
-  host: "localhost",
   onConnect: () => {
     /** since this file gets hot reloaded, let's clear the past logs every time we connect */
     Reactotron.clear()
@@ -110,7 +109,12 @@ reactotron.onCustomCommand({
  *
  * ```
  * if (__DEV__) {
- *  console.tron.log('here')
+ *  console.tron.display({
+ *    name: 'JOKE',
+ *    preview: 'What's the best thing about Switzerland?',
+ *    value: 'I don't know, but the flag is a big plus!',
+ *    important: true
+ *  })
  * }
  * ```
  *
@@ -132,8 +136,6 @@ declare global {
      *
      * @example
      * if (__DEV__) {
-     *  console.tron.log("here")
-     *
      *  console.tron.display({
      *    name: 'JOKE',
      *    preview: 'What's the best thing about Switzerland?',
@@ -147,37 +149,6 @@ declare global {
   }
 }
 
-/**
- * For our last trick, we are going to monkey patching console to also output to Reactotron.
- */
-const ogConsoleLog = console.log
-console.log = (...args: Parameters<typeof console.log>) => {
-  ogConsoleLog(...args)
-  reactotron.log(...args)
-}
-
-const ogConsoleWarn = console.warn
-console.warn = (...args: Parameters<typeof console.warn>) => {
-  ogConsoleWarn(...args)
-  reactotron.warn(args[0])
-}
-
-const ogConsoleError = console.error
-console.error = (...args: Parameters<typeof console.error>) => {
-  ogConsoleError(...args)
-  if (args[0] instanceof Error) {
-    reactotron.error(args[0].message, args[0].stack)
-  } else {
-    reactotron.error(args[0], args[1])
-  }
-}
-
-const ogConsoleDebug = console.debug
-console.debug = (...args: Parameters<typeof console.debug>) => {
-  ogConsoleDebug(...args)
-  reactotron.debug(args[0])
-}
-
 /**
  * Now that we've setup all our Reactotron configuration, let's connect!
  */
diff --git a/IgniteDiffApp/app/models/EpisodeStore.ts b/IgniteDiffApp/app/models/EpisodeStore.ts
index 0319ca3..af4fd3f 100644
--- a/IgniteDiffApp/app/models/EpisodeStore.ts
+++ b/IgniteDiffApp/app/models/EpisodeStore.ts
@@ -17,7 +17,7 @@ export const EpisodeStoreModel = types
       if (response.kind === "ok") {
         store.setProp("episodes", response.episodes)
       } else {
-        console.tron.error?.(`Error fetching episodes: ${JSON.stringify(response)}`, [])
+        console.error(`Error fetching episodes: ${JSON.stringify(response)}`)
       }
     },
     addFavorite(episode: Episode) {
diff --git a/IgniteDiffApp/app/models/helpers/setupRootStore.ts b/IgniteDiffApp/app/models/helpers/setupRootStore.ts
index 039bd86..aea5d36 100644
--- a/IgniteDiffApp/app/models/helpers/setupRootStore.ts
+++ b/IgniteDiffApp/app/models/helpers/setupRootStore.ts
@@ -32,7 +32,7 @@ export async function setupRootStore(rootStore: RootStore) {
   } catch (e) {
     // if there's any problems loading, then inform the dev what happened
     if (__DEV__) {
-      if (e instanceof Error) console.tron.error?.(e.message, null)
+      if (e instanceof Error) console.error(e.message)
     }
   }
 
diff --git a/IgniteDiffApp/app/navigators/DemoNavigator.tsx b/IgniteDiffApp/app/navigators/DemoNavigator.tsx
index 1e2302c..414158e 100644
--- a/IgniteDiffApp/app/navigators/DemoNavigator.tsx
+++ b/IgniteDiffApp/app/navigators/DemoNavigator.tsx
@@ -105,5 +105,4 @@ const $tabBarLabel: TextStyle = {
   fontSize: 12,
   fontFamily: typography.primary.medium,
   lineHeight: 16,
-  flex: 1,
 }
diff --git a/IgniteDiffApp/app/navigators/navigationUtilities.ts b/IgniteDiffApp/app/navigators/navigationUtilities.ts
index a8a8623..9b8885e 100644
--- a/IgniteDiffApp/app/navigators/navigationUtilities.ts
+++ b/IgniteDiffApp/app/navigators/navigationUtilities.ts
@@ -44,8 +44,8 @@ export function getActiveRouteName(state: NavigationState | PartialState<Navigat
  * the navigation or allows exiting the app.
  */
 export function useBackButtonHandler(canExit: (routeName: string) => boolean) {
-  // ignore if iOS ... no back button!
-  if (Platform.OS === "ios") return
+  // ignore unless android... no back button!
+  if (Platform.OS !== "android") return
 
   // The reason we're using a ref here is because we need to be able
   // to update the canExit function without re-setting up all the listeners
@@ -123,7 +123,7 @@ export function useNavigationPersistence(storage: Storage, persistenceKey: strin
       if (previousRouteName !== currentRouteName) {
         // track screens.
         if (__DEV__) {
-          console.tron.log?.(currentRouteName)
+          console.log(currentRouteName)
         }
       }
 
diff --git a/IgniteDiffApp/app/screens/DemoShowroomScreen/demos/DemoButton.tsx b/IgniteDiffApp/app/screens/DemoShowroomScreen/demos/DemoButton.tsx
index dd860b2..7580ee0 100644
--- a/IgniteDiffApp/app/screens/DemoShowroomScreen/demos/DemoButton.tsx
+++ b/IgniteDiffApp/app/screens/DemoShowroomScreen/demos/DemoButton.tsx
@@ -27,6 +27,12 @@ const $customButtonRightAccessoryStyle: ViewStyle = {
 }
 const $customButtonPressedRightAccessoryStyle: ImageStyle = { tintColor: colors.palette.neutral100 }
 
+const $disabledOpacity: ViewStyle = { opacity: 0.5 }
+const $disabledButtonTextStyle: TextStyle = {
+  color: colors.palette.neutral100,
+  textDecorationColor: colors.palette.neutral100,
+}
+
 export const DemoButton: Demo = {
   name: "Button",
   description:
@@ -136,5 +142,70 @@ export const DemoButton: Demo = {
         Style Pressed State - fugiat anim
       </Button>
     </DemoUseCase>,
+
+    <DemoUseCase
+      name="Disabling"
+      description="The component can be disabled, and styled based on that. Press behavior will be disabled."
+    >
+      <Button
+        disabled
+        disabledStyle={$disabledOpacity}
+        pressedStyle={$customButtonPressedStyle}
+        pressedTextStyle={$customButtonPressedTextStyle}
+      >
+        Disabled - standard
+      </Button>
+      <DemoDivider />
+
+      <Button
+        disabled
+        preset="filled"
+        disabledStyle={$disabledOpacity}
+        pressedStyle={$customButtonPressedStyle}
+        pressedTextStyle={$customButtonPressedTextStyle}
+      >
+        Disabled - filled
+      </Button>
+      <DemoDivider />
+
+      <Button
+        disabled
+        preset="reversed"
+        disabledStyle={$disabledOpacity}
+        pressedStyle={$customButtonPressedStyle}
+        pressedTextStyle={$customButtonPressedTextStyle}
+      >
+        Disabled - reversed
+      </Button>
+      <DemoDivider />
+
+      <Button
+        disabled
+        pressedStyle={$customButtonPressedStyle}
+        pressedTextStyle={$customButtonPressedTextStyle}
+        RightAccessory={(props) => (
+          <View
+            style={
+              props.disabled
+                ? [$customButtonRightAccessoryStyle, $disabledOpacity]
+                : $customButtonPressedRightAccessoryStyle
+            }
+          />
+        )}
+      >
+        Disabled accessory style
+      </Button>
+      <DemoDivider />
+
+      <Button
+        disabled
+        preset="filled"
+        disabledTextStyle={[$customButtonTextStyle, $disabledButtonTextStyle]}
+        pressedStyle={$customButtonPressedStyle}
+        pressedTextStyle={$customButtonPressedTextStyle}
+      >
+        Disabled text style
+      </Button>
+    </DemoUseCase>,
   ],
 }
diff --git a/IgniteDiffApp/app/screens/ErrorScreen/ErrorBoundary.tsx b/IgniteDiffApp/app/screens/ErrorScreen/ErrorBoundary.tsx
index ad0f37a..ca8025f 100644
--- a/IgniteDiffApp/app/screens/ErrorScreen/ErrorBoundary.tsx
+++ b/IgniteDiffApp/app/screens/ErrorScreen/ErrorBoundary.tsx
@@ -17,7 +17,7 @@ interface State {
  * class component because according to the documentation, only class
  * components can be error boundaries.
  *
- * - [Documentation and Examples](https://github.com/infinitered/ignite/blob/master/docs/Error-Boundary.md)
+ * - [Documentation and Examples](https://docs.infinite.red/ignite-cli/concept/Error-Boundary/)
  * - [React Error Boundaries](https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary)
  */
 export class ErrorBoundary extends Component<Props, State> {
diff --git a/IgniteDiffApp/app/services/api/api.ts b/IgniteDiffApp/app/services/api/api.ts
index 695b079..fc8d859 100644
--- a/IgniteDiffApp/app/services/api/api.ts
+++ b/IgniteDiffApp/app/services/api/api.ts
@@ -69,7 +69,7 @@ export class Api {
       return { kind: "ok", episodes }
     } catch (e) {
       if (__DEV__ && e instanceof Error) {
-        console.tron.error?.(`Bad data: ${e.message}\n${response.data}`, e.stack)
+        console.error(`Bad data: ${e.message}\n${response.data}`, e.stack)
       }
       return { kind: "bad-data" }
     }
diff --git a/IgniteDiffApp/app/theme/colors.ts b/IgniteDiffApp/app/theme/colors.ts
index a8daa80..ae26aa9 100644
--- a/IgniteDiffApp/app/theme/colors.ts
+++ b/IgniteDiffApp/app/theme/colors.ts
@@ -1,6 +1,6 @@
 // TODO: write documentation for colors and palette in own markdown file and add links from here
 
-const palette: Record<string, string> = {
+const palette = {
   neutral100: "#FFFFFF",
   neutral200: "#F4F2F1",
   neutral300: "#D7CEC9",
diff --git a/IgniteDiffApp/app/utils/crashReporting.ts b/IgniteDiffApp/app/utils/crashReporting.ts
index bb79efc..7c79483 100644
--- a/IgniteDiffApp/app/utils/crashReporting.ts
+++ b/IgniteDiffApp/app/utils/crashReporting.ts
@@ -55,7 +55,6 @@ export const reportCrash = (error: Error, type: ErrorType = ErrorType.FATAL) =>
     const message = error.message || "Unknown"
     console.error(error)
     console.log(message, type)
-    console.tron.log(error)
   } else {
     // In production, utilize crash reporting service of choice below:
     // RN
diff --git a/IgniteDiffApp/package.json b/IgniteDiffApp/package.json
index 4f0e9f3..e0b7797 100644
--- a/IgniteDiffApp/package.json
+++ b/IgniteDiffApp/package.json
@@ -39,7 +39,7 @@
     "@shopify/flash-list": "1.4.3",
     "apisauce": "3.0.1",
     "date-fns": "^2.30.0",
-    "expo": "^49.0.18",
+    "expo": "^49.0.21",
     "expo-application": "~5.3.0",
     "expo-build-properties": "~0.8.3",
     "expo-font": "~11.4.0",
@@ -54,7 +54,7 @@
     "react": "18.2.0",
     "react-dom": "18.2.0",
     "react-native": "0.72.6",
-    "react-native-drawer-layout": "^4.0.0-alpha.1",
+    "react-native-drawer-layout": "4.0.0-alpha.1",
     "react-native-gesture-handler": "~2.12.0",
     "react-native-reanimated": "~3.3.0",
     "react-native-safe-area-context": "4.6.3",
@@ -87,20 +87,20 @@
     "eslint-plugin-promise": "6.0.0",
     "eslint-plugin-react": "7.30.0",
     "eslint-plugin-react-native": "4.0.0",
+    "eslint-plugin-reactotron": "^0.1.1",
     "jest": "^29.2.1",
     "jest-expo": "49.0.0",
     "patch-package": "6.4.7",
     "postinstall-prepare": "1.0.1",
     "prettier": "2.8.8",
     "react-test-renderer": "18.2.0",
-    "reactotron-core-client": "2.8.11-beta.15",
-    "reactotron-mst": "3.1.5-beta.15",
-    "reactotron-react-js": "3.3.9-beta.15",
-    "reactotron-react-native": "5.0.4-beta.16",
-    "regenerator-runtime": "^0.13.4",
+    "reactotron-core-client": "2.8.11",
+    "reactotron-mst": "3.1.5",
+    "reactotron-react-js": "3.3.9",
+    "reactotron-react-native": "5.0.4",
     "ts-jest": "^29.1.1",
-    "ts-node": "^10.9.1",
-    "typescript": "5.2.2"
+    "ts-node": "^10.9.2",
+    "typescript": "5.3.2"
   },
   "expo": {
     "install": {
@@ -110,7 +110,7 @@
     }
   },
   "engines": {
-    "node": ">=18"
+    "node": ">=16"
   },
   "prettier": {
     "printWidth": 100,
@@ -131,7 +131,8 @@
     "plugins": [
       "@typescript-eslint",
       "react",
-      "react-native"
+      "react-native",
+      "reactotron"
     ],
     "parserOptions": {
       "ecmaFeatures": {
@@ -186,7 +187,8 @@
       "react-native/no-raw-text": 0,
       "react/no-unescaped-entities": 0,
       "react/prop-types": 0,
-      "space-before-function-paren": 0
+      "space-before-function-paren": 0,
+      "reactotron/no-tron-in-production": "error"
     }
   }
 }
\ No newline at end of file
diff --git a/IgniteDiffApp/yarn.lock b/IgniteDiffApp/yarn.lock
index 0c21c8e..fc8aa60 100644
--- a/IgniteDiffApp/yarn.lock
+++ b/IgniteDiffApp/yarn.lock
@@ -4297,6 +4297,11 @@ eslint-plugin-react@7.30.0:
     semver "^6.3.0"
     string.prototype.matchall "^4.0.7"
 
+eslint-plugin-reactotron@^0.1.1:
+  version "0.1.4"
+  resolved "https://registry.yarnpkg.com/eslint-plugin-reactotron/-/eslint-plugin-reactotron-0.1.4.tgz#a22134a823c5fd9f97659e426e4eaca2da909212"
+  integrity sha512-UjMjLQFIaqGqrArA7tBMeCzutdJ1Lp9vtH8tkU5ThDxh3HI2mwI8vJ9efjYm8Zru/m2ec1Swr+NayPTAJ9IZvA==
+
 eslint-scope@^5.1.1:
   version "5.1.1"
   resolved "https://registry.yarnpkg.com/eslint-scope/-/eslint-scope-5.1.1.tgz#e786e59a66cb92b3f6c1fb0d508aab174848f48c"
@@ -4588,7 +4593,7 @@ expo-status-bar@~1.6.0:
   resolved "https://registry.yarnpkg.com/expo-status-bar/-/expo-status-bar-1.6.0.tgz#e79ffdb9a84d2e0ec9a0dc7392d9ab364fefa9cf"
   integrity sha512-e//Oi2WPdomMlMDD3skE4+1ZarKCJ/suvcB4Jo/nO427niKug5oppcPNYO+csR6y3ZglGuypS+3pp/hJ+Xp6fQ==
 
-expo@^49.0.18:
+expo@^49.0.21:
   version "49.0.23"
   resolved "https://registry.yarnpkg.com/expo/-/expo-49.0.23.tgz#b8dc4daecdc2e912607a4bc63dede5506017976d"
   integrity sha512-mFdBpWisPXBuocRGywC14nDai5vSUmvEyQpwvKH/xUo+m5/TUvfqV6YIewFpW22zn5WFGFiuJPhzNrqhBBinIw==
@@ -7907,12 +7912,12 @@ react-is@^17.0.1:
   resolved "https://registry.yarnpkg.com/react-is/-/react-is-17.0.2.tgz#e691d4a8e9c789365655539ab372762b0efb54f0"
   integrity sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==
 
-react-native-drawer-layout@^4.0.0-alpha.1:
-  version "4.0.0-alpha.9"
-  resolved "https://registry.yarnpkg.com/react-native-drawer-layout/-/react-native-drawer-layout-4.0.0-alpha.9.tgz#761722ddce43d37ea8d12e902fd5c550489e4c4e"
-  integrity sha512-/UchC4SB2dVP04c1llBD6O39YHfgja55PYFGkNShuXU66v992QlS1cpu6WjANYTI0HwP9Vayi9lXlLoxZt14Lw==
+react-native-drawer-layout@4.0.0-alpha.1:
+  version "4.0.0-alpha.1"
+  resolved "https://registry.yarnpkg.com/react-native-drawer-layout/-/react-native-drawer-layout-4.0.0-alpha.1.tgz#458f2f060e0d175b161d546aeb306f350e42a3ae"
+  integrity sha512-WVJZKzm/7BFtri6jRfpQVgpZYqkiGNEn5gAy8+rwaUOin/m8E73WEjQwJ89IofgkInlPfW3HVUbA2sVj9tafRw==
   dependencies:
-    use-latest-callback "^0.1.9"
+    use-latest-callback "^0.1.5"
 
 react-native-flipper@^0.164.0:
   version "0.164.0"
@@ -8038,41 +8043,41 @@ react@18.2.0:
   dependencies:
     loose-envify "^1.1.0"
 
-reactotron-core-client@2.8.11-beta.15:
-  version "2.8.11-beta.15"
-  resolved "https://registry.yarnpkg.com/reactotron-core-client/-/reactotron-core-client-2.8.11-beta.15.tgz#29705fafd718f2059fef15eb11494208cf187f49"
-  integrity sha512-L+RAaIIli0Z28KfDmoj3QCq8fHyYmQTkmSlEOr1ZBGNkzJ+K9juG2ZG5gcky2n/MIXlrfixQw5GRnI4Oj9fOUw==
+reactotron-core-client@2.8.11:
+  version "2.8.11"
+  resolved "https://registry.yarnpkg.com/reactotron-core-client/-/reactotron-core-client-2.8.11.tgz#93c7d9c0038704c22b0e9d1e6de54e1578051442"
+  integrity sha512-zoqKrAqWjTPpa1s1AtVZPZItYE8Kjgs99v9gcKMCW2Ejcba9fYOoRCwu0zqoHU8iWyBzJsOWVai0FdRVRUHf8Q==
   dependencies:
-    reactotron-core-contract "0.0.5"
+    reactotron-core-contract "0.1.1"
 
-reactotron-core-contract@0.0.5:
-  version "0.0.5"
-  resolved "https://registry.yarnpkg.com/reactotron-core-contract/-/reactotron-core-contract-0.0.5.tgz#44f8ed6568bd1a76e8cbc120e8263a08d666c4f4"
-  integrity sha512-HixNOxJwLV951WinuvMYJE2+qw4b2NIQdAVH8NU1KbznDuZdf73v+s4GWxDlCN3OGsIXvBxGEulMSh7TSP3o9w==
+reactotron-core-contract@0.1.1:
+  version "0.1.1"
+  resolved "https://registry.yarnpkg.com/reactotron-core-contract/-/reactotron-core-contract-0.1.1.tgz#3fc0e72e17a71c830c752985b5d2a5dd3df79166"
+  integrity sha512-NmmojG6Pz97NJe8ov0oZgIxxaaEkXsVAiFOeFTI4QH03qMqAs6d28nUd5bTrKLipxWy5rPr4PXITE7AHdT0kaw==
 
-reactotron-mst@3.1.5-beta.15:
-  version "3.1.5-beta.15"
-  resolved "https://registry.yarnpkg.com/reactotron-mst/-/reactotron-mst-3.1.5-beta.15.tgz#e0b01cecb18df96e2e8a9159ac0a7d51f8a7fd8d"
-  integrity sha512-zIUCUWKzH+8rHyQcNBC1s5uoaO7cKW9BNBt2jvw/PahTQZ9CxrSMsFpnScz+RdPN5SpvZWg2X1sF0Fbr8FgiLw==
+reactotron-mst@3.1.5:
+  version "3.1.5"
+  resolved "https://registry.yarnpkg.com/reactotron-mst/-/reactotron-mst-3.1.5.tgz#aa8e47ff15f862d9a95ce5cd865cb6549ff6368f"
+  integrity sha512-o15kCGkWdf7yILqzax/1rCyMW9O5B/seYxmqOZAz+C7/l79Xi+iPNgcVDTMi3fnhRariedk3ytF/iy11G2QPZg==
   dependencies:
     ramda "^0.25.0"
 
-reactotron-react-js@3.3.9-beta.15:
-  version "3.3.9-beta.15"
-  resolved "https://registry.yarnpkg.com/reactotron-react-js/-/reactotron-react-js-3.3.9-beta.15.tgz#079338a96d66229732a4273030a2b54e17439466"
-  integrity sha512-OnD9cyYvS/2drKwp/+3bNOOKTtkROLzMxOvPzFX2Z5qf6hosk4JrW4ErgfbG3DzakEdS5vmXrcaQWbX9VYomCg==
+reactotron-react-js@3.3.9:
+  version "3.3.9"
+  resolved "https://registry.yarnpkg.com/reactotron-react-js/-/reactotron-react-js-3.3.9.tgz#5d88bc8859c817a36e968d04803419a835008456"
+  integrity sha512-EKql8RumpNPTOEYHHO8/th7Ckb0YXQoZmJLyjv8N2ckNO2+5EVMSe1Tg4BQxJ2bFGeypbp2wZ2Vuhk2WEU1XyA==
   dependencies:
-    reactotron-core-client "2.8.11-beta.15"
+    reactotron-core-client "2.8.11"
     stacktrace-js "2.0.1"
 
-reactotron-react-native@5.0.4-beta.16:
-  version "5.0.4-beta.16"
-  resolved "https://registry.yarnpkg.com/reactotron-react-native/-/reactotron-react-native-5.0.4-beta.16.tgz#368c853b045901790b4718fdfd9fd7b3eb4cd21b"
-  integrity sha512-Vzpl1EPYTJde2EWtywl8cdrQgU88dCAVCFWakQZypUIlr5IVS6lnmfZ0kWHksW2HUQQKavCxgZWB+1JI7GWLJw==
+reactotron-react-native@5.0.4:
+  version "5.0.4"
+  resolved "https://registry.yarnpkg.com/reactotron-react-native/-/reactotron-react-native-5.0.4.tgz#4bff2e74f2a99bf4963db130a6b392036bd90130"
+  integrity sha512-Ho5PXLtF4GirFzhjdzbVgRk9Idf3woK5c9Cx1lVdYMVb96kzUMlzn2qCD7H6t/yjIFik9LM/3ncWWNHacVySNg==
   dependencies:
     mitt "^3.0.1"
     query-string "6.14.1"
-    reactotron-core-client "2.8.11-beta.15"
+    reactotron-core-client "2.8.11"
   optionalDependencies:
     react-native-flipper "^0.164.0"
 
@@ -8134,7 +8139,7 @@ regenerate@^1.4.2:
   resolved "https://registry.yarnpkg.com/regenerate/-/regenerate-1.4.2.tgz#b9346d8827e8f5a32f7ba29637d398b69014848a"
   integrity sha512-zrceR/XhGYU/d/opr2EKO7aRHUeiBI8qjtfHqADTwZd6Szfy16la6kqD0MIUs5z5hx6AaKa+PixpPrR289+I0A==
 
-regenerator-runtime@^0.13.2, regenerator-runtime@^0.13.4:
+regenerator-runtime@^0.13.2:
   version "0.13.11"
   resolved "https://registry.yarnpkg.com/regenerator-runtime/-/regenerator-runtime-0.13.11.tgz#f6dca3e7ceec20590d07ada785636a90cdca17f9"
   integrity sha512-kY1AZVr2Ra+t+piVaJ4gxaFaReZVH40AKNo7UCX6W+dEwBo/2oZJzqfuN1qLq1oL45o56cPaTXELwrTh8Fpggg==
@@ -9160,7 +9165,7 @@ ts-jest@^29.1.1:
     semver "^7.5.3"
     yargs-parser "^21.0.1"
 
-ts-node@^10.9.1:
+ts-node@^10.9.2:
   version "10.9.2"
   resolved "https://registry.yarnpkg.com/ts-node/-/ts-node-10.9.2.tgz#70f021c9e185bccdca820e26dc413805c101c71f"
   integrity sha512-f0FFpIdcHgn8zcPSbf1dRevwt047YMnaiJM3u2w2RewrB+fob/zePZcrOyQoLMMO7aBIddLcQIEK5dYjkLnGrQ==
@@ -9322,10 +9327,10 @@ typedarray.prototype.slice@^1.0.3:
     typed-array-buffer "^1.0.2"
     typed-array-byte-offset "^1.0.2"
 
-typescript@5.2.2:
-  version "5.2.2"
-  resolved "https://registry.yarnpkg.com/typescript/-/typescript-5.2.2.tgz#5ebb5e5a5b75f085f22bc3f8460fba308310fa78"
-  integrity sha512-mI4WrpHsbCIcwT9cF4FZvr80QUeKvsUsUvKDoR+X/7XHQH98xYD8YHZg7ANtz2GtZt/CBq2QJ0thkGJMHfqc1w==
+typescript@5.3.2:
+  version "5.3.2"
+  resolved "https://registry.yarnpkg.com/typescript/-/typescript-5.3.2.tgz#00d1c7c1c46928c5845c1ee8d0cc2791031d4c43"
+  integrity sha512-6l+RyNy7oAHDfxC4FzSJcz9vnjTKxrLpDG5M2Vu4SHRVNg6xzqZp6LYSR9zjqQTu8DU/f5xwxUdADOkbrIX2gQ==
 
 ua-parser-js@^1.0.35:
   version "1.0.38"
@@ -9459,7 +9464,7 @@ url-parse@^1.5.3, url-parse@^1.5.9:
     querystringify "^2.1.1"
     requires-port "^1.0.0"
 
-use-latest-callback@^0.1.9:
+use-latest-callback@^0.1.5, use-latest-callback@^0.1.9:
   version "0.1.9"
   resolved "https://registry.yarnpkg.com/use-latest-callback/-/use-latest-callback-0.1.9.tgz#10191dc54257e65a8e52322127643a8940271e2a"
   integrity sha512-CL/29uS74AwreI/f2oz2hLTW7ZqVeV5+gxFeGudzQrgkCytrHw33G4KbnQOrRlAEzzAFXi7dDLMC9zhWcVpzmw==
