diff --git a/IgniteDiffApp/README.md b/IgniteDiffApp/README.md
index 0cd79609..ddd8e779 100644
--- a/IgniteDiffApp/README.md
+++ b/IgniteDiffApp/README.md
@@ -10,16 +10,16 @@ This is the boilerplate that [Infinite Red](https://infinite.red) uses as a way
 ## Getting Started
 
 ```bash
-bun install
-bun run start
+yarn
+yarn start
 ```
 
 To make things work on your local simulator, or on your phone, you need first to [run `eas build`](https://github.com/infinitered/ignite/blob/master/docs/expo/EAS.md). We have many shortcuts on `package.json` to make it easier:
 
 ```bash
-bun run build:ios:sim # build for ios simulator
-bun run build:ios:dev # build for ios device
-bun run build:ios:prod # build for ios device
+yarn build:ios:sim # build for ios simulator
+yarn build:ios:dev # build for ios device
+yarn build:ios:prod # build for ios device
 ```
 
 ### `./assets` directory
diff --git a/IgniteDiffApp/app.json b/IgniteDiffApp/app.json
index cee12089..941de417 100644
--- a/IgniteDiffApp/app.json
+++ b/IgniteDiffApp/app.json
@@ -23,8 +23,7 @@
       "adaptiveIcon": {
         "foregroundImage": "./assets/images/app-icon-android-adaptive-foreground.png",
         "backgroundImage": "./assets/images/app-icon-android-adaptive-background.png"
-      },
-      "allowBackup": false
+      }
     },
     "ios": {
       "icon": "./assets/images/app-icon-ios.png",
@@ -53,6 +52,6 @@
     }
   },
   "ignite": {
-    "version": "10.1.8"
+    "version": "10.1.4"
   }
 }
\ No newline at end of file
diff --git a/IgniteDiffApp/app/components/EmptyState.tsx b/IgniteDiffApp/app/components/EmptyState.tsx
index df33d508..f6a187a0 100644
--- a/IgniteDiffApp/app/components/EmptyState.tsx
+++ b/IgniteDiffApp/app/components/EmptyState.tsx
@@ -1,10 +1,9 @@
 import { Image, ImageProps, ImageStyle, StyleProp, TextStyle, View, ViewStyle } from "react-native"
-
+import { translate } from "../i18n"
 import { Button, ButtonProps } from "./Button"
 import { Text, TextProps } from "./Text"
 import { useAppTheme } from "@/utils/useAppTheme"
 import type { ThemedStyle } from "@/theme"
-import { translate } from "@/i18n/translate"
 
 const sadFace = require("../../assets/images/sad-face.png")
 
diff --git a/IgniteDiffApp/app/components/Header.tsx b/IgniteDiffApp/app/components/Header.tsx
index a81ede72..b272aa23 100644
--- a/IgniteDiffApp/app/components/Header.tsx
+++ b/IgniteDiffApp/app/components/Header.tsx
@@ -7,7 +7,7 @@ import {
   View,
   ViewStyle,
 } from "react-native"
-import { isRTL, translate } from "@/i18n"
+import { isRTL, translate } from "../i18n"
 import { $styles } from "../theme"
 import { ExtendedEdge, useSafeAreaInsetsStyle } from "../utils/useSafeAreaInsetsStyle"
 import { Icon, IconTypes } from "./Icon"
diff --git a/IgniteDiffApp/app/components/Text.test.tsx b/IgniteDiffApp/app/components/Text.test.tsx
index b89d098e..c8be8f58 100644
--- a/IgniteDiffApp/app/components/Text.test.tsx
+++ b/IgniteDiffApp/app/components/Text.test.tsx
@@ -1,4 +1,4 @@
-import { render, screen } from "@testing-library/react-native"
+import { render } from "@testing-library/react-native"
 import { Text } from "./Text"
 
 /* This is an example component test using react-native-testing-library. For more
@@ -8,7 +8,7 @@ const testText = "Test string"
 
 describe("Text", () => {
   it("should render the component", () => {
-    render(<Text text={testText} />)
-    expect(screen.getByText(testText)).toBeDefined()
+    const { getByText } = render(<Text text={testText} />)
+    expect(getByText(testText)).toBeDefined()
   })
 })
diff --git a/IgniteDiffApp/app/components/Text.tsx b/IgniteDiffApp/app/components/Text.tsx
index dbe0b41e..86e57505 100644
--- a/IgniteDiffApp/app/components/Text.tsx
+++ b/IgniteDiffApp/app/components/Text.tsx
@@ -1,6 +1,6 @@
 import { TOptions } from "i18next"
 import { StyleProp, Text as RNText, TextProps as RNTextProps, TextStyle } from "react-native"
-import { isRTL, translate, TxKeyPath } from "@/i18n"
+import { isRTL, translate, TxKeyPath } from "../i18n"
 import type { ThemedStyle, ThemedStyleArray } from "@/theme"
 import { useAppTheme } from "@/utils/useAppTheme"
 import { typography } from "@/theme/typography"
diff --git a/IgniteDiffApp/app/components/TextField.tsx b/IgniteDiffApp/app/components/TextField.tsx
index 6e26f69b..bdb361fc 100644
--- a/IgniteDiffApp/app/components/TextField.tsx
+++ b/IgniteDiffApp/app/components/TextField.tsx
@@ -9,7 +9,7 @@ import {
   View,
   ViewStyle,
 } from "react-native"
-import { isRTL, translate } from "@/i18n"
+import { isRTL, translate } from "../i18n"
 import type { ThemedStyle, ThemedStyleArray } from "@/theme"
 import { $styles } from "../theme"
 import { Text, TextProps } from "./Text"
diff --git a/IgniteDiffApp/app/models/Episode.ts b/IgniteDiffApp/app/models/Episode.ts
index 285a33af..3f4b7ad8 100644
--- a/IgniteDiffApp/app/models/Episode.ts
+++ b/IgniteDiffApp/app/models/Episode.ts
@@ -1,7 +1,7 @@
 import { Instance, SnapshotIn, SnapshotOut, types } from "mobx-state-tree"
 import { withSetPropAction } from "./helpers/withSetPropAction"
 import { formatDate } from "../utils/formatDate"
-import { translate } from "@/i18n"
+import { translate } from "../i18n"
 
 interface Enclosure {
   link: string
diff --git a/IgniteDiffApp/app/navigators/DemoNavigator.tsx b/IgniteDiffApp/app/navigators/DemoNavigator.tsx
index f4783337..7c6afc5e 100644
--- a/IgniteDiffApp/app/navigators/DemoNavigator.tsx
+++ b/IgniteDiffApp/app/navigators/DemoNavigator.tsx
@@ -3,7 +3,7 @@ import { CompositeScreenProps } from "@react-navigation/native"
 import { TextStyle, ViewStyle } from "react-native"
 import { useSafeAreaInsets } from "react-native-safe-area-context"
 import { Icon } from "../components"
-import { translate } from "@/i18n"
+import { translate } from "../i18n"
 import { DemoCommunityScreen, DemoShowroomScreen, DemoDebugScreen } from "../screens"
 import { DemoPodcastListScreen } from "../screens/DemoPodcastListScreen"
 import type { ThemedStyle } from "@/theme"
diff --git a/IgniteDiffApp/app/screens/DemoCommunityScreen.tsx b/IgniteDiffApp/app/screens/DemoCommunityScreen.tsx
index d957038c..e2a02187 100644
--- a/IgniteDiffApp/app/screens/DemoCommunityScreen.tsx
+++ b/IgniteDiffApp/app/screens/DemoCommunityScreen.tsx
@@ -4,7 +4,7 @@ import { ListItem, Screen, Text } from "../components"
 import { DemoTabScreenProps } from "../navigators/DemoNavigator"
 import { $styles } from "../theme"
 import { openLinkInBrowser } from "../utils/openLinkInBrowser"
-import { isRTL } from "@/i18n"
+import { isRTL } from "../i18n"
 import type { ThemedStyle } from "@/theme"
 import { useAppTheme } from "@/utils/useAppTheme"
 
diff --git a/IgniteDiffApp/app/screens/DemoDebugScreen.tsx b/IgniteDiffApp/app/screens/DemoDebugScreen.tsx
index 50af4762..c217c8d9 100644
--- a/IgniteDiffApp/app/screens/DemoDebugScreen.tsx
+++ b/IgniteDiffApp/app/screens/DemoDebugScreen.tsx
@@ -13,7 +13,7 @@ import { Button, ListItem, Screen, Text } from "../components"
 import { DemoTabScreenProps } from "../navigators/DemoNavigator"
 import type { ThemedStyle } from "@/theme"
 import { $styles } from "../theme"
-import { isRTL } from "@/i18n"
+import { isRTL } from "../i18n"
 import { useStores } from "../models"
 import { useAppTheme } from "@/utils/useAppTheme"
 
diff --git a/IgniteDiffApp/app/screens/DemoPodcastListScreen.tsx b/IgniteDiffApp/app/screens/DemoPodcastListScreen.tsx
index d28a17ba..3e981ba9 100644
--- a/IgniteDiffApp/app/screens/DemoPodcastListScreen.tsx
+++ b/IgniteDiffApp/app/screens/DemoPodcastListScreen.tsx
@@ -31,7 +31,7 @@ import {
   Switch,
   Text,
 } from "@/components"
-import { isRTL, translate } from "@/i18n"
+import { isRTL, translate } from "../i18n"
 import { useStores } from "../models"
 import { Episode } from "../models/Episode"
 import { DemoTabScreenProps } from "../navigators/DemoNavigator"
diff --git a/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoShowroomScreen.tsx b/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoShowroomScreen.tsx
index dc6e7310..9867e312 100644
--- a/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoShowroomScreen.tsx
+++ b/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoShowroomScreen.tsx
@@ -4,7 +4,7 @@ import { Image, ImageStyle, Platform, SectionList, TextStyle, View, ViewStyle }
 import { Drawer } from "react-native-drawer-layout"
 import { type ContentStyle } from "@shopify/flash-list"
 import { ListItem, ListView, ListViewRef, Screen, Text } from "../../components"
-import { TxKeyPath, isRTL, translate } from "@/i18n"
+import { TxKeyPath, isRTL, translate } from "../../i18n"
 import { DemoTabParamList, DemoTabScreenProps } from "../../navigators/DemoNavigator"
 import type { Theme, ThemedStyle } from "@/theme"
 import { $styles } from "@/theme"
diff --git a/IgniteDiffApp/app/screens/DemoShowroomScreen/DrawerIconButton.tsx b/IgniteDiffApp/app/screens/DemoShowroomScreen/DrawerIconButton.tsx
index e0ab41c3..72a4c041 100644
--- a/IgniteDiffApp/app/screens/DemoShowroomScreen/DrawerIconButton.tsx
+++ b/IgniteDiffApp/app/screens/DemoShowroomScreen/DrawerIconButton.tsx
@@ -1,7 +1,7 @@
 import { Pressable, PressableProps, ViewStyle, Platform } from "react-native"
 import Animated, { interpolate, interpolateColor, useAnimatedStyle } from "react-native-reanimated"
 import { useDrawerProgress } from "react-native-drawer-layout"
-import { isRTL } from "@/i18n"
+import { isRTL } from "../../i18n"
 import { useAppTheme } from "@/utils/useAppTheme"
 
 interface DrawerIconButtonProps extends PressableProps {}
diff --git a/IgniteDiffApp/app/screens/WelcomeScreen.tsx b/IgniteDiffApp/app/screens/WelcomeScreen.tsx
index f3619269..c72a5f81 100644
--- a/IgniteDiffApp/app/screens/WelcomeScreen.tsx
+++ b/IgniteDiffApp/app/screens/WelcomeScreen.tsx
@@ -2,7 +2,7 @@ import { observer } from "mobx-react-lite"
 import { FC } from "react"
 import { Image, ImageStyle, TextStyle, View, ViewStyle } from "react-native"
 import { Button, Text, Screen } from "@/components"
-import { isRTL } from "@/i18n"
+import { isRTL } from "../i18n"
 import { useStores } from "../models"
 import { AppStackScreenProps } from "../navigators"
 import { $styles, type ThemedStyle } from "@/theme"
diff --git a/IgniteDiffApp/bun.lock b/IgniteDiffApp/bun.lock
index bae6f988..0f4dd108 100644
--- a/IgniteDiffApp/bun.lock
+++ b/IgniteDiffApp/bun.lock
@@ -1017,7 +1017,7 @@
 
     "emoji-regex": ["emoji-regex@8.0.0", "", {}, "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="],
 
-    "encodeurl": ["encodeurl@2.0.0", "", {}, "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg=="],
+    "encodeurl": ["encodeurl@1.0.2", "", {}, "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w=="],
 
     "end-of-stream": ["end-of-stream@1.4.5", "", { "dependencies": { "once": "^1.4.0" } }, "sha512-ooEGc6HP26xXq/N+GCGOT0JKCLDGrq2bQUZrQ7gyrJiZANJ/8YDTxTpQBXGMn+WbIQXNVpyWymm7KYVICQnyOg=="],
 
@@ -1985,7 +1985,7 @@
 
     "semver": ["semver@6.3.1", "", { "bin": { "semver": "bin/semver.js" } }, "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA=="],
 
-    "send": ["send@0.19.1", "", { "dependencies": { "debug": "2.6.9", "depd": "2.0.0", "destroy": "1.2.0", "encodeurl": "~2.0.0", "escape-html": "~1.0.3", "etag": "~1.8.1", "fresh": "0.5.2", "http-errors": "2.0.0", "mime": "1.6.0", "ms": "2.1.3", "on-finished": "2.4.1", "range-parser": "~1.2.1", "statuses": "2.0.1" } }, "sha512-p4rRk4f23ynFEfcD9LA0xRYngj+IyGiEYyqqOak8kaN0TvNmuxC2dcVeBn62GpCeR2CpWqyHCNScTP91QbAVFg=="],
+    "send": ["send@0.19.0", "", { "dependencies": { "debug": "2.6.9", "depd": "2.0.0", "destroy": "1.2.0", "encodeurl": "~1.0.2", "escape-html": "~1.0.3", "etag": "~1.8.1", "fresh": "0.5.2", "http-errors": "2.0.0", "mime": "1.6.0", "ms": "2.1.3", "on-finished": "2.4.1", "range-parser": "~1.2.1", "statuses": "2.0.1" } }, "sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw=="],
 
     "serialize-error": ["serialize-error@2.1.0", "", {}, "sha512-ghgmKt5o4Tly5yEG/UJp8qTd0AN7Xalw4XBtDEKP655B699qMEtra1WlXeE6WIvdEG481JvRxULKsInq/iNysw=="],
 
@@ -2491,8 +2491,6 @@
 
     "finalhandler/debug": ["debug@2.6.9", "", { "dependencies": { "ms": "2.0.0" } }, "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA=="],
 
-    "finalhandler/encodeurl": ["encodeurl@1.0.2", "", {}, "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w=="],
-
     "finalhandler/on-finished": ["on-finished@2.3.0", "", { "dependencies": { "ee-first": "1.1.1" } }, "sha512-ikqdkGAAyf/X/gPhXGvfgAytDZtDbr+bkNUJ0N9h5MI/dmdgCs3l6hoHrcUv41sRKew3jIwrp4qQDXiK99Utww=="],
 
     "finalhandler/statuses": ["statuses@1.5.0", "", {}, "sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA=="],
@@ -2627,7 +2625,7 @@
 
     "send/debug": ["debug@2.6.9", "", { "dependencies": { "ms": "2.0.0" } }, "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA=="],
 
-    "serve-static/send": ["send@0.19.0", "", { "dependencies": { "debug": "2.6.9", "depd": "2.0.0", "destroy": "1.2.0", "encodeurl": "~1.0.2", "escape-html": "~1.0.3", "etag": "~1.8.1", "fresh": "0.5.2", "http-errors": "2.0.0", "mime": "1.6.0", "ms": "2.1.3", "on-finished": "2.4.1", "range-parser": "~1.2.1", "statuses": "2.0.1" } }, "sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw=="],
+    "serve-static/encodeurl": ["encodeurl@2.0.0", "", {}, "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg=="],
 
     "simple-plist/bplist-creator": ["bplist-creator@0.1.0", "", { "dependencies": { "stream-buffers": "2.2.x" } }, "sha512-sXaHZicyEEmY86WyueLTQesbeoH/mquvarJaQNbjuOQO+7gbFcDEWqKmcWA4cOTLzFlfgvkiVxolk1k5bBIpmg=="],
 
@@ -2821,10 +2819,6 @@
 
     "send/debug/ms": ["ms@2.0.0", "", {}, "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A=="],
 
-    "serve-static/send/debug": ["debug@2.6.9", "", { "dependencies": { "ms": "2.0.0" } }, "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA=="],
-
-    "serve-static/send/encodeurl": ["encodeurl@1.0.2", "", {}, "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w=="],
-
     "string-length/strip-ansi/ansi-regex": ["ansi-regex@6.2.0", "", {}, "sha512-TKY5pyBkHyADOPYlRT9Lx6F544mPl0vS5Ew7BJ45hA08Q+t3GjbueLliBWN3sMICk6+y7HdyxSzC4bWS8baBdg=="],
 
     "sucrase/glob/minimatch": ["minimatch@9.0.5", "", { "dependencies": { "brace-expansion": "^2.0.1" } }, "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow=="],
@@ -2881,8 +2875,6 @@
 
     "pkg-dir/find-up/locate-path/p-locate": ["p-locate@4.1.0", "", { "dependencies": { "p-limit": "^2.2.0" } }, "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A=="],
 
-    "serve-static/send/debug/ms": ["ms@2.0.0", "", {}, "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A=="],
-
     "sucrase/glob/minimatch/brace-expansion": ["brace-expansion@2.0.2", "", { "dependencies": { "balanced-match": "^1.0.0" } }, "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ=="],
 
     "@babel/highlight/chalk/ansi-styles/color-convert/color-name": ["color-name@1.1.3", "", {}, "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw=="],
diff --git a/IgniteDiffApp/ignite/templates/model/NAME.test.ts.ejs b/IgniteDiffApp/ignite/templates/model/NAME.test.ts.ejs
index 070081ab..006ced05 100644
--- a/IgniteDiffApp/ignite/templates/model/NAME.test.ts.ejs
+++ b/IgniteDiffApp/ignite/templates/model/NAME.test.ts.ejs
@@ -9,4 +9,3 @@ test("can be created", () => {
   expect(instance).toBeTruthy()
 })
 
-
diff --git a/IgniteDiffApp/ignite/templates/model/NAME.ts.ejs b/IgniteDiffApp/ignite/templates/model/NAME.ts.ejs
index e7228184..8a0b80a7 100644
--- a/IgniteDiffApp/ignite/templates/model/NAME.ts.ejs
+++ b/IgniteDiffApp/ignite/templates/model/NAME.ts.ejs
@@ -31,4 +31,3 @@ export interface <%= props.pascalCaseName %>SnapshotOut extends SnapshotOut<type
 export interface <%= props.pascalCaseName %>SnapshotIn extends SnapshotIn<typeof <%= props.pascalCaseName %>Model> {}
 export const create<%= props.pascalCaseName %>DefaultModel = () => types.optional(<%= props.pascalCaseName %>Model, {})
 
-
diff --git a/IgniteDiffApp/test/mockFile.ts b/IgniteDiffApp/test/mockFile.ts
index 41f073f9..5bf851af 100644
--- a/IgniteDiffApp/test/mockFile.ts
+++ b/IgniteDiffApp/test/mockFile.ts
@@ -2,5 +2,5 @@ export default {
   height: 100,
   width: 100,
   scale: 2.0,
-  uri: "https://placecats.com/200/200",
+  uri: "https://placekitten.com/200/200",
 }
