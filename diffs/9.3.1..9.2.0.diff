diff --git a/IgniteDiffApp/.gitignore b/IgniteDiffApp/.gitignore
index a5c60cc..7b101a9 100644
--- a/IgniteDiffApp/.gitignore
+++ b/IgniteDiffApp/.gitignore
@@ -59,6 +59,9 @@ buck-out/
 # Bundle artifact
 *.jsbundle
 
+# CocoaPods
+/ios/Pods/
+
 # Ignite-specific items below
 # You can safely replace everything above this comment with whatever is
 # in the default .gitignore generated by React-Native CLI
@@ -69,10 +72,11 @@ buck-out/
 # Expo
 .expo/*
 bin/Exponent.app
-/android
-/ios
 
-## Secrets
+# If using Expo Go/Prebuild, uncomment these:
+# android
+# ios
+
 npm-debug.*
 *.jks
 *.p8
diff --git a/IgniteDiffApp/app.json b/IgniteDiffApp/app.json
index 082ad8d..0a7ee47 100644
--- a/IgniteDiffApp/app.json
+++ b/IgniteDiffApp/app.json
@@ -72,6 +72,6 @@
     }
   },
   "ignite": {
-    "version": "9.3.1"
+    "version": "9.2.0"
   }
 }
\ No newline at end of file
diff --git a/IgniteDiffApp/app/components/AutoImage.tsx b/IgniteDiffApp/app/components/AutoImage.tsx
index bf2f7c8..9f36b8f 100644
--- a/IgniteDiffApp/app/components/AutoImage.tsx
+++ b/IgniteDiffApp/app/components/AutoImage.tsx
@@ -54,7 +54,7 @@ export function useAutoImage(
 /**
  * An Image component that automatically sizes a remote or data-uri image.
  *
- * - [Documentation and Examples](https://docs.infinite.red/ignite-cli/boilerplate/components/AutoImage/)
+ * - [Documentation and Examples](https://github.com/infinitered/ignite/blob/master/docs/Components-AutoImage.md)
  */
 export function AutoImage(props: AutoImageProps) {
   const { maxWidth, maxHeight, ...ImageProps } = props
diff --git a/IgniteDiffApp/app/components/Button.tsx b/IgniteDiffApp/app/components/Button.tsx
index 6e43c54..38aa03c 100644
--- a/IgniteDiffApp/app/components/Button.tsx
+++ b/IgniteDiffApp/app/components/Button.tsx
@@ -15,7 +15,6 @@ type Presets = keyof typeof $viewPresets
 export interface ButtonAccessoryProps {
   style: StyleProp<any>
   pressableState: PressableStateCallbackType
-  disabled?: boolean
 }
 
 export interface ButtonProps extends PressableProps {
@@ -48,10 +47,6 @@ export interface ButtonProps extends PressableProps {
    * An optional style override for the button text when in the "pressed" state.
    */
   pressedTextStyle?: StyleProp<TextStyle>
-  /**
-   * An optional style override for the button text when in the "disabled" state.
-   */
-  disabledTextStyle?: StyleProp<TextStyle>
   /**
    * One of the different types of button presets.
    */
@@ -70,15 +65,6 @@ export interface ButtonProps extends PressableProps {
    * Children components.
    */
   children?: React.ReactNode
-  /**
-   * disabled prop, accessed directly for declarative styling reasons.
-   * https://reactnative.dev/docs/pressable#disabled
-   */
-  disabled?: boolean
-  /**
-   * An optional style override for the disabled state
-   */
-  disabledStyle?: StyleProp<ViewStyle>
 }
 
 /**
@@ -96,12 +82,9 @@ export function Button(props: ButtonProps) {
     pressedStyle: $pressedViewStyleOverride,
     textStyle: $textStyleOverride,
     pressedTextStyle: $pressedTextStyleOverride,
-    disabledTextStyle: $disabledTextStyleOverride,
     children,
     RightAccessory,
     LeftAccessory,
-    disabled,
-    disabledStyle: $disabledViewStyleOverride,
     ...rest
   } = props
 
@@ -111,7 +94,6 @@ export function Button(props: ButtonProps) {
       $viewPresets[preset],
       $viewStyleOverride,
       !!pressed && [$pressedViewPresets[preset], $pressedViewStyleOverride],
-      !!disabled && $disabledViewStyleOverride,
     ]
   }
   function $textStyle({ pressed }: PressableStateCallbackType) {
@@ -119,34 +101,21 @@ export function Button(props: ButtonProps) {
       $textPresets[preset],
       $textStyleOverride,
       !!pressed && [$pressedTextPresets[preset], $pressedTextStyleOverride],
-      !!disabled && $disabledTextStyleOverride,
     ]
   }
 
   return (
-    <Pressable
-      style={$viewStyle}
-      accessibilityRole="button"
-      accessibilityState={{ disabled: !!disabled }}
-      {...rest}
-      disabled={disabled}
-    >
+    <Pressable style={$viewStyle} accessibilityRole="button" {...rest}>
       {(state) => (
         <>
-          {!!LeftAccessory && (
-            <LeftAccessory style={$leftAccessoryStyle} pressableState={state} disabled={disabled} />
-          )}
+          {!!LeftAccessory && <LeftAccessory style={$leftAccessoryStyle} pressableState={state} />}
 
           <Text tx={tx} text={text} txOptions={txOptions} style={$textStyle(state)}>
             {children}
           </Text>
 
           {!!RightAccessory && (
-            <RightAccessory
-              style={$rightAccessoryStyle}
-              pressableState={state}
-              disabled={disabled}
-            />
+            <RightAccessory style={$rightAccessoryStyle} pressableState={state} />
           )}
         </>
       )}
diff --git a/IgniteDiffApp/app/navigators/navigationUtilities.ts b/IgniteDiffApp/app/navigators/navigationUtilities.ts
index 9b8885e..4fe25d6 100644
--- a/IgniteDiffApp/app/navigators/navigationUtilities.ts
+++ b/IgniteDiffApp/app/navigators/navigationUtilities.ts
@@ -44,8 +44,8 @@ export function getActiveRouteName(state: NavigationState | PartialState<Navigat
  * the navigation or allows exiting the app.
  */
 export function useBackButtonHandler(canExit: (routeName: string) => boolean) {
-  // ignore unless android... no back button!
-  if (Platform.OS !== "android") return
+  // ignore if iOS ... no back button!
+  if (Platform.OS === "ios") return
 
   // The reason we're using a ref here is because we need to be able
   // to update the canExit function without re-setting up all the listeners
diff --git a/IgniteDiffApp/app/screens/DemoShowroomScreen/demos/DemoButton.tsx b/IgniteDiffApp/app/screens/DemoShowroomScreen/demos/DemoButton.tsx
index 7580ee0..dd860b2 100644
--- a/IgniteDiffApp/app/screens/DemoShowroomScreen/demos/DemoButton.tsx
+++ b/IgniteDiffApp/app/screens/DemoShowroomScreen/demos/DemoButton.tsx
@@ -27,12 +27,6 @@ const $customButtonRightAccessoryStyle: ViewStyle = {
 }
 const $customButtonPressedRightAccessoryStyle: ImageStyle = { tintColor: colors.palette.neutral100 }
 
-const $disabledOpacity: ViewStyle = { opacity: 0.5 }
-const $disabledButtonTextStyle: TextStyle = {
-  color: colors.palette.neutral100,
-  textDecorationColor: colors.palette.neutral100,
-}
-
 export const DemoButton: Demo = {
   name: "Button",
   description:
@@ -142,70 +136,5 @@ export const DemoButton: Demo = {
         Style Pressed State - fugiat anim
       </Button>
     </DemoUseCase>,
-
-    <DemoUseCase
-      name="Disabling"
-      description="The component can be disabled, and styled based on that. Press behavior will be disabled."
-    >
-      <Button
-        disabled
-        disabledStyle={$disabledOpacity}
-        pressedStyle={$customButtonPressedStyle}
-        pressedTextStyle={$customButtonPressedTextStyle}
-      >
-        Disabled - standard
-      </Button>
-      <DemoDivider />
-
-      <Button
-        disabled
-        preset="filled"
-        disabledStyle={$disabledOpacity}
-        pressedStyle={$customButtonPressedStyle}
-        pressedTextStyle={$customButtonPressedTextStyle}
-      >
-        Disabled - filled
-      </Button>
-      <DemoDivider />
-
-      <Button
-        disabled
-        preset="reversed"
-        disabledStyle={$disabledOpacity}
-        pressedStyle={$customButtonPressedStyle}
-        pressedTextStyle={$customButtonPressedTextStyle}
-      >
-        Disabled - reversed
-      </Button>
-      <DemoDivider />
-
-      <Button
-        disabled
-        pressedStyle={$customButtonPressedStyle}
-        pressedTextStyle={$customButtonPressedTextStyle}
-        RightAccessory={(props) => (
-          <View
-            style={
-              props.disabled
-                ? [$customButtonRightAccessoryStyle, $disabledOpacity]
-                : $customButtonPressedRightAccessoryStyle
-            }
-          />
-        )}
-      >
-        Disabled accessory style
-      </Button>
-      <DemoDivider />
-
-      <Button
-        disabled
-        preset="filled"
-        disabledTextStyle={[$customButtonTextStyle, $disabledButtonTextStyle]}
-        pressedStyle={$customButtonPressedStyle}
-        pressedTextStyle={$customButtonPressedTextStyle}
-      >
-        Disabled text style
-      </Button>
-    </DemoUseCase>,
   ],
 }
diff --git a/IgniteDiffApp/app/screens/ErrorScreen/ErrorBoundary.tsx b/IgniteDiffApp/app/screens/ErrorScreen/ErrorBoundary.tsx
index ca8025f..ad0f37a 100644
--- a/IgniteDiffApp/app/screens/ErrorScreen/ErrorBoundary.tsx
+++ b/IgniteDiffApp/app/screens/ErrorScreen/ErrorBoundary.tsx
@@ -17,7 +17,7 @@ interface State {
  * class component because according to the documentation, only class
  * components can be error boundaries.
  *
- * - [Documentation and Examples](https://docs.infinite.red/ignite-cli/concept/Error-Boundary/)
+ * - [Documentation and Examples](https://github.com/infinitered/ignite/blob/master/docs/Error-Boundary.md)
  * - [React Error Boundaries](https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary)
  */
 export class ErrorBoundary extends Component<Props, State> {
diff --git a/IgniteDiffApp/package.json b/IgniteDiffApp/package.json
index e0b7797..e1b2731 100644
--- a/IgniteDiffApp/package.json
+++ b/IgniteDiffApp/package.json
@@ -42,6 +42,7 @@
     "expo": "^49.0.21",
     "expo-application": "~5.3.0",
     "expo-build-properties": "~0.8.3",
+    "expo-dev-client": "~2.4.12",
     "expo-font": "~11.4.0",
     "expo-linking": "~5.0.2",
     "expo-localization": "~14.3.0",
diff --git a/IgniteDiffApp/yarn.lock b/IgniteDiffApp/yarn.lock
index fc8aa60..e4a6f82 100644
--- a/IgniteDiffApp/yarn.lock
+++ b/IgniteDiffApp/yarn.lock
@@ -4524,6 +4524,47 @@ expo-constants@~14.4.2:
     "@expo/config" "~8.1.0"
     uuid "^3.3.2"
 
+expo-dev-client@~2.4.12:
+  version "2.4.13"
+  resolved "https://registry.yarnpkg.com/expo-dev-client/-/expo-dev-client-2.4.13.tgz#cf8c829e2f815b273db44c17e513d5410af5b7fa"
+  integrity sha512-EBNJlPntw+DZy7mKxYvpdrmE2GU4YjcEpxSLpwNn2GDwy7e2xXAC2k/25E13BGy3yKPLo1iBXNgB01uleIDdVg==
+  dependencies:
+    expo-dev-launcher "2.4.15"
+    expo-dev-menu "3.2.4"
+    expo-dev-menu-interface "1.3.0"
+    expo-manifests "~0.7.0"
+    expo-updates-interface "~0.10.0"
+
+expo-dev-launcher@2.4.15:
+  version "2.4.15"
+  resolved "https://registry.yarnpkg.com/expo-dev-launcher/-/expo-dev-launcher-2.4.15.tgz#298ac56b523f77c40523453224f75dcc894198bc"
+  integrity sha512-6oF4NsxlKwuafnyIZvVtMp4OTxRu4Arsw6qJ9s4jDjZuGJtGwgEj9ux3R0YLkDPs8xhsK9Awp0q17RqbQzs1qg==
+  dependencies:
+    expo-dev-menu "3.2.3"
+    resolve-from "^5.0.0"
+    semver "^7.5.3"
+
+expo-dev-menu-interface@1.3.0:
+  version "1.3.0"
+  resolved "https://registry.yarnpkg.com/expo-dev-menu-interface/-/expo-dev-menu-interface-1.3.0.tgz#51b6be8c6e0ce73e414ac7a545998dfad0dfdb80"
+  integrity sha512-WtRP7trQ2lizJJTTFXUSGGn1deIeHaYej0sUynvu/uC69VrSP4EeSnYOxbmEO29kuT/MsQBMGu0P/AkMQOqCOg==
+
+expo-dev-menu@3.2.3:
+  version "3.2.3"
+  resolved "https://registry.yarnpkg.com/expo-dev-menu/-/expo-dev-menu-3.2.3.tgz#31c102251d94e9a35fac667cefdbaeae7b1e1375"
+  integrity sha512-DneF3okTC4AAfAZgaOIylQ/UngSO8SnUT6bRV6nHhJU/jQS1OIP1cZoNW23I100+2yj6x6mobL21PxyiI5VA8g==
+  dependencies:
+    expo-dev-menu-interface "1.3.0"
+    semver "^7.5.3"
+
+expo-dev-menu@3.2.4:
+  version "3.2.4"
+  resolved "https://registry.yarnpkg.com/expo-dev-menu/-/expo-dev-menu-3.2.4.tgz#25ba1efe70bf74ab2d7804eab54212785cd2a01a"
+  integrity sha512-jPvEY4xGTsiVL6A8M6xThNG+tgCHKlDaWqmWHT+wy2EXgFf/7zE0daVYoFms0KJ1XtZc+/DmDRgIPTR86qIGTg==
+  dependencies:
+    expo-dev-menu-interface "1.3.0"
+    semver "^7.5.3"
+
 expo-file-system@~15.4.0, expo-file-system@~15.4.5:
   version "15.4.5"
   resolved "https://registry.yarnpkg.com/expo-file-system/-/expo-file-system-15.4.5.tgz#3ef68583027ff0e2fb9eca7a22b3caff6cfc550d"
@@ -4538,6 +4579,11 @@ expo-font@~11.4.0:
   dependencies:
     fontfaceobserver "^2.1.0"
 
+expo-json-utils@~0.7.0:
+  version "0.7.1"
+  resolved "https://registry.yarnpkg.com/expo-json-utils/-/expo-json-utils-0.7.1.tgz#efe315c982113204be46419cbc26d4d9a2af145f"
+  integrity sha512-L0lyH8diXQtV0q5BLbFlcoxTqPF5im79xDHPhybB0j36xYdm65hjwRJ4yMrPIN5lR18hj48FUZeONiDHRyEvIg==
+
 expo-keep-awake@~12.3.0:
   version "12.3.0"
   resolved "https://registry.yarnpkg.com/expo-keep-awake/-/expo-keep-awake-12.3.0.tgz#c42449ae19c993274ddc43aafa618792b6aec408"
@@ -4561,6 +4607,13 @@ expo-localization@~14.3.0:
   dependencies:
     rtl-detect "^1.0.2"
 
+expo-manifests@~0.7.0:
+  version "0.7.2"
+  resolved "https://registry.yarnpkg.com/expo-manifests/-/expo-manifests-0.7.2.tgz#77c2d9476e8130fc9ca6d4274fa1a5495d34358e"
+  integrity sha512-xlhL0XI2zw3foJ0q2Ra4ieBhU0V2yz+Rv6GpVEaaIHFlIC/Dbx+mKrX5dgenZEMERr/MG7sRJaRbAVB2PaAYhA==
+  dependencies:
+    expo-json-utils "~0.7.0"
+
 expo-modules-autolinking@1.5.1:
   version "1.5.1"
   resolved "https://registry.yarnpkg.com/expo-modules-autolinking/-/expo-modules-autolinking-1.5.1.tgz#363f90c172769ce12bf56c7be9ca0897adfc7a81"
@@ -4593,6 +4646,11 @@ expo-status-bar@~1.6.0:
   resolved "https://registry.yarnpkg.com/expo-status-bar/-/expo-status-bar-1.6.0.tgz#e79ffdb9a84d2e0ec9a0dc7392d9ab364fefa9cf"
   integrity sha512-e//Oi2WPdomMlMDD3skE4+1ZarKCJ/suvcB4Jo/nO427niKug5oppcPNYO+csR6y3ZglGuypS+3pp/hJ+Xp6fQ==
 
+expo-updates-interface@~0.10.0:
+  version "0.10.1"
+  resolved "https://registry.yarnpkg.com/expo-updates-interface/-/expo-updates-interface-0.10.1.tgz#cab075641cd381718ccd9264bf133dc393430a44"
+  integrity sha512-I6JMR7EgjXwckrydDmrkBEX/iw750dcqpzQVsjznYWfi0HTEOxajLHB90fBFqQkUV5i5s4Fd3hYQ1Cn0oMzUbA==
+
 expo@^49.0.21:
   version "49.0.23"
   resolved "https://registry.yarnpkg.com/expo/-/expo-49.0.23.tgz#b8dc4daecdc2e912607a4bc63dede5506017976d"
